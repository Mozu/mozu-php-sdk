<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Orders;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Orders\OrderItemUrl;


/**
* Use this subresource to retrieve details about items in an active order.
*/
class OrderItemClient {

	/**
	* 
	*
	* @param bool $draft 
	* @param int $lineId 
	* @param string $orderId 
	* @param string $responseFields 
	* @return MozuClient
	*/
	public static function getOrderItemViaLineIdClient($orderId, $lineId, $draft =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::getOrderItemViaLineIdUrl($draft, $lineId, $orderId, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param bool $draft If true, retrieve the draft version of this order item, which might include uncommitted changes to the order item, the order, or other order components.
	* @param string $orderId Unique identifier of the order item to retrieve.
	* @param string $orderItemId Unique identifier of the order item details to retrieve.
	* @param string $responseFields 
	* @return MozuClient
	*/
	public static function getOrderItemClient($orderId, $orderItemId, $draft =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::getOrderItemUrl($draft, $orderId, $orderItemId, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param bool $draft If true, retrieve the draft version of the order's items, which might include uncommitted changes to one or more order items, the order itself, or other order components.
	* @param string $orderId Unique identifier of the order items to retrieve.
	* @param string $responseFields 
	* @return MozuClient
	*/
	public static function getOrderItemsClient($orderId, $draft =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::getOrderItemsUrl($draft, $orderId, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId Unique identifier of the order for which to add the item.
	* @param string $responseFields 
	* @param bool $skipInventoryCheck If true, do not validate the product inventory when adding this item to the order.
	* @param string $updateMode Specifies whether to add the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version 
	* @param OrderItem $orderItem The properties of the item to create in the existing order.
	* @return MozuClient
	*/
	public static function createOrderItemClient($orderItem, $orderId, $updateMode =  null, $version =  null, $skipInventoryCheck =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::createOrderItemUrl($orderId, $responseFields, $skipInventoryCheck, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($orderItem);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $discountId Unique identifier of the discount. System-supplied and read only.
	* @param string $orderId Unique identifier of the order associated with the item discount.
	* @param string $orderItemId Unique identifier of the item in the order.
	* @param string $responseFields 
	* @param string $updateMode Specifies whether to change the item discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version 
	* @param AppliedDiscount $discount Properties of the discount to modify for the order item.
	* @return MozuClient
	*/
	public static function updateOrderItemDiscountClient($discount, $orderId, $orderItemId, $discountId, $updateMode =  null, $version =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::updateOrderItemDiscountUrl($discountId, $orderId, $orderItemId, $responseFields, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($discount);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param decimal $dutyAmount 
	* @param string $orderId 
	* @param string $orderItemId 
	* @param string $responseFields 
	* @param string $updateMode 
	* @param string $version 
	* @return MozuClient
	*/
	public static function updateItemDutyClient($orderId, $orderItemId, $dutyAmount, $updateMode =  null, $version =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::updateItemDutyUrl($dutyAmount, $orderId, $orderItemId, $responseFields, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId Unique identifier of the order.
	* @param string $orderItemId Unique identifier of the item in the order.
	* @param string $responseFields 
	* @param string $updateMode Specifies whether to apply the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version 
	* @param OrderItem $orderItem Properties of the order item to update for fulfillment.
	* @return MozuClient
	*/
	public static function updateItemFulfillmentClient($orderItem, $orderId, $orderItemId, $updateMode =  null, $version =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::updateItemFulfillmentUrl($orderId, $orderItemId, $responseFields, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($orderItem);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId Unique identifier of the order containing the item to price override.
	* @param string $orderItemId Unique identifier of the item in the order to price override.
	* @param decimal $price The override price to specify for this item in the specified order.
	* @param string $responseFields 
	* @param string $updateMode Specifies whether to change the product price by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version 
	* @return MozuClient
	*/
	public static function updateItemProductPriceClient($orderId, $orderItemId, $price, $updateMode =  null, $version =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::updateItemProductPriceUrl($orderId, $orderItemId, $price, $responseFields, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId Unique identifier of the order containing the item to update quantity.
	* @param string $orderItemId Unique identifier of the item in the order to update quantity.
	* @param int $quantity The quantity of the item in the order to update.
	* @param string $responseFields 
	* @param string $updateMode Specifies whether to change the item quantity by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version 
	* @return MozuClient
	*/
	public static function updateItemQuantityClient($orderId, $orderItemId, $quantity, $updateMode =  null, $version =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::updateItemQuantityUrl($orderId, $orderItemId, $quantity, $responseFields, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $orderId Unique identifier of the order with the item to remove.
	* @param string $orderItemId Unique identifier of the item to remove from the order.
	* @param string $updateMode Specifies whether to remove the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version 
	* @return MozuClient
	*/
	public static function deleteOrderItemClient($orderId, $orderItemId, $updateMode =  null, $version =  null)
	{
		$url = OrderItemUrl::deleteOrderItemUrl($orderId, $orderItemId, $updateMode, $version);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

