<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Catalog\Storefront;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Catalog\Storefront\ProductUrl;

use Mozu\Api\Headers;

/**
* Use the Storefront Products  resource to manage the shopper product selection process during a visit to the web storefront. You can update product options as shoppers pick and choose their product choices. A shopper cannot add a product to a cart until all of its required options have been selected.
*/
class ProductClient {

	/**
	* 
	*
	* @param string $cursorMark 
	* @param string $defaultSort 
	* @param string $filter 
	* @param int $pageSize Used to page results from a query. Indicates the maximum number of entities to return from a single query. Default value: 20. Maximum value: 200.
	* @param string $responseFields 
	* @param string $responseOptions 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return MozuClient
	*/
	public static function getProductsClient($dataViewMode, $filter =  null, $startIndex =  null, $pageSize =  null, $sortBy =  null, $responseOptions =  null, $cursorMark =  null, $defaultSort =  null, $responseFields =  null)
	{
		$url = ProductUrl::getProductsUrl($cursorMark, $defaultSort, $filter, $pageSize, $responseFields, $responseOptions, $sortBy, $startIndex);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $locationCodes Array of location codes for which to retrieve product inventory information.
	* @param string $productCode 
	* @param string $responseFields 
	* @return MozuClient
	*/
	public static function getProductInventoryClient($dataViewMode, $productCode, $locationCodes =  null, $responseFields =  null)
	{
		$url = ProductUrl::getProductInventoryUrl($locationCodes, $productCode, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param bool $acceptVariantProductCode 
	* @param bool $allowInactive If true, returns an inactive product as part of the query.
	* @param string $productCode 
	* @param string $purchaseLocation 
	* @param int $quantity 
	* @param string $responseFields 
	* @param bool $skipInventoryCheck If true, skip the inventory validation process for the specified product.
	* @param bool $supressOutOfStock404 
	* @param string $variationProductCode Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
	* @param string $variationProductCodeFilter 
	* @return MozuClient
	*/
	public static function getProductClient($dataViewMode, $productCode, $variationProductCode =  null, $allowInactive =  null, $skipInventoryCheck =  null, $supressOutOfStock404 =  null, $quantity =  null, $acceptVariantProductCode =  null, $purchaseLocation =  null, $variationProductCodeFilter =  null, $responseFields =  null)
	{
		$url = ProductUrl::getProductUrl($acceptVariantProductCode, $allowInactive, $productCode, $purchaseLocation, $quantity, $responseFields, $skipInventoryCheck, $supressOutOfStock404, $variationProductCode, $variationProductCodeFilter);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param DateTime $lastModifiedDate 
	* @param string $productCode 
	* @param long $productVersion 
	* @param string $responseFields 
	* @return MozuClient
	*/
	public static function getProductForIndexingClient($dataViewMode, $productCode, $productVersion =  null, $lastModifiedDate =  null, $responseFields =  null)
	{
		$url = ProductUrl::getProductForIndexingUrl($lastModifiedDate, $productCode, $productVersion, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param bool $includeOptionDetails If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.
	* @param string $productCode 
	* @param string $purchaseLocation 
	* @param int $quantity 
	* @param string $responseFields 
	* @param bool $skipInventoryCheck If true, skip the inventory validation process for the specified product.
	* @param string $variationProductCodeFilter 
	* @param ProductOptionSelections $productOptionSelections For a product with shopper-configurable options, the properties of the product options selected by the shopper.
	* @return MozuClient
	*/
	public static function configuredProductClient($productOptionSelections, $productCode, $includeOptionDetails =  null, $skipInventoryCheck =  null, $quantity =  null, $purchaseLocation =  null, $variationProductCodeFilter =  null, $responseFields =  null)
	{
		$url = ProductUrl::configuredProductUrl($includeOptionDetails, $productCode, $purchaseLocation, $quantity, $responseFields, $skipInventoryCheck, $variationProductCodeFilter);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($productOptionSelections);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $productCode 
	* @param string $purchaseLocation 
	* @param int $quantity 
	* @param string $responseFields 
	* @param bool $skipDefaults 
	* @param bool $skipInventoryCheck If true, skip the inventory validation process for the specified product.
	* @param ProductOptionSelections $productOptionSelections For a product with shopper-configurable options, the properties of the product options selected by the shopper.
	* @return MozuClient
	*/
	public static function validateProductClient($productOptionSelections, $productCode, $skipInventoryCheck =  null, $quantity =  null, $skipDefaults =  null, $purchaseLocation =  null, $responseFields =  null)
	{
		$url = ProductUrl::validateProductUrl($productCode, $purchaseLocation, $quantity, $responseFields, $skipDefaults, $skipInventoryCheck);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($productOptionSelections);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param bool $allowInactive If true, this operation returns inactive product discounts as part of the POST.
	* @param int $customerAccountId Unique ID of the customer account associated with the shopper requesting the discount.
	* @param string $productCode 
	* @param string $responseFields 
	* @param bool $skipInventoryCheck If true, do not validate the product inventory when evaluating the list of discounts.
	* @param string $variationProductCode Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
	* @param DiscountSelections $discountSelections List of discount IDs to evaluate for the specified product.
	* @return MozuClient
	*/
	public static function validateDiscountsClient($discountSelections, $productCode, $variationProductCode =  null, $customerAccountId =  null, $allowInactive =  null, $skipInventoryCheck =  null, $responseFields =  null)
	{
		$url = ProductUrl::validateDiscountsUrl($allowInactive, $customerAccountId, $productCode, $responseFields, $skipInventoryCheck, $variationProductCode);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($discountSelections);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param ProductCostQuery $query 
	* @return MozuClient
	*/
	public static function getProductCostsClient($dataViewMode, $query, $responseFields =  null)
	{
		$url = ProductUrl::getProductCostsUrl($responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($query)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param LocationInventoryQuery $query 
	* @return MozuClient
	*/
	public static function getProductInventoriesClient($dataViewMode, $query, $responseFields =  null)
	{
		$url = ProductUrl::getProductInventoriesUrl($responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($query)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);
		return $mozuClient;

	}
	
	
}

?>

