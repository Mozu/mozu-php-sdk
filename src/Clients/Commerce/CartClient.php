<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\CartUrl;


/**
* Use the Carts resource to manage storefront shopping carts as items are added and removed. Each time a shopper's cart is modified, the Carts resource updates the estimated total with any applicable discounts.
*/
class CartClient {

	/**
	* 
	*
	* @param string $cartId Identifier of the cart to retrieve.
	* @param string $responseFields 
	* @return MozuClient
	*/
	public static function getCartClient($cartId, $responseFields =  null)
	{
		$url = CartUrl::getCartUrl($cartId, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @return MozuClient
	*/
	public static function getOrCreateCartClient($responseFields =  null)
	{
		$url = CartUrl::getOrCreateCartUrl($responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @return MozuClient
	*/
	public static function getCartSummaryClient($responseFields =  null)
	{
		$url = CartUrl::getCartSummaryUrl($responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param string $userId Unique identifier of the user whose cart details you want to retrieve.
	* @return MozuClient
	*/
	public static function getUserCartSummaryClient($userId, $responseFields =  null)
	{
		$url = CartUrl::getUserCartSummaryUrl($responseFields, $userId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param string $userId Unique identifier of the user whose cart you want to retrieve.
	* @return MozuClient
	*/
	public static function getUserCartClient($userId, $responseFields =  null)
	{
		$url = CartUrl::getUserCartUrl($responseFields, $userId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $cartId 
	* @param int $discountId 
	* @param string $responseFields 
	* @return MozuClient
	*/
	public static function rejectSuggestedDiscountClient($cartId, $discountId, $responseFields =  null)
	{
		$url = CartUrl::rejectSuggestedDiscountUrl($cartId, $discountId, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param Cart $cart All of the properties of the cart to update. The product code is required.
	* @return MozuClient
	*/
	public static function updateCartClient($cart, $responseFields =  null)
	{
		$url = CartUrl::updateCartUrl($responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($cart);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $cartId Identifier of the cart to delete.
	* @return MozuClient
	*/
	public static function deleteCartClient($cartId)
	{
		$url = CartUrl::deleteCartUrl($cartId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @return MozuClient
	*/
	public static function deleteCurrentCartClient()
	{
		$url = CartUrl::deleteCurrentCartUrl();
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

