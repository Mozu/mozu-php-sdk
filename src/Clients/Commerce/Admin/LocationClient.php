<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Admin;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Admin\LocationUrl;


/**
* Use the Locations resource to manage each physical location associated with a tenant. Locations enable tenants to associate a physical address with product inventory, provide a store finder for in-store pickup, or both. Locations that support inventory can use both direct ship and in-store pickup fulfillment types.
*/
class LocationClient {

	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return MozuClient
	*/
	public static function getLocationsClient($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$url = LocationUrl::getLocationsUrl($filter, $pageSize, $responseFields, $sortBy, $startIndex);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $locationCode The merchant-defined code of the location to retrieve.
	* @param string $responseFields 
	* @return MozuClient
	*/
	public static function getLocationClient($locationCode, $responseFields =  null)
	{
		$url = LocationUrl::getLocationUrl($locationCode, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param Location $location Properties of the location to create.
	* @return MozuClient
	*/
	public static function addLocationClient($location, $responseFields =  null)
	{
		$url = LocationUrl::addLocationUrl($responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($location);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $locationCode The merchant-defined code associated with the location to update.
	* @param string $responseFields 
	* @param Location $location Properties of the location to update.
	* @return MozuClient
	*/
	public static function updateLocationClient($location, $locationCode, $responseFields =  null)
	{
		$url = LocationUrl::updateLocationUrl($locationCode, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($location);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $locationCode The merchant-defined code of the location to delete.
	* @return MozuClient
	*/
	public static function deleteLocationClient($locationCode)
	{
		$url = LocationUrl::deleteLocationUrl($locationCode);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

