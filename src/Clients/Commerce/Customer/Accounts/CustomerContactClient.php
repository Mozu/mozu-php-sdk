<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Customer\Accounts;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Customer\Accounts\CustomerContactUrl;


/**
* Merchants and customers can create, view, update, and delete a contact for a customer account. A customer account may have multiple contacts for billing and shipping addresses.
*/
class CustomerContactClient {

	/**
	* 
	*
	* @param int $accountId Unique identifier of the customer account whose contact information is being retrieved.
	* @param int $contactId Unique identifier of the customer account contact to retrieve.
	* @param string $responseFields 
	* @param string $userId 
	* @return MozuClient
	*/
	public static function getAccountContactClient($accountId, $contactId, $userId =  null, $responseFields =  null)
	{
		$url = CustomerContactUrl::getAccountContactUrl($accountId, $contactId, $responseFields, $userId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $accountId Unique identifier of the customer account associated with the contact information to retrieve.
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @param string $userId 
	* @return MozuClient
	*/
	public static function getAccountContactsClient($accountId, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $userId =  null, $responseFields =  null)
	{
		$url = CustomerContactUrl::getAccountContactsUrl($accountId, $filter, $pageSize, $responseFields, $sortBy, $startIndex, $userId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $accountId Unique identifier of the customer account containing the new contact.
	* @param string $responseFields 
	* @param CustomerContact $contact Properties of the new contact. Required properties: Contact.Email, ContactType.
	* @return MozuClient
	*/
	public static function addAccountContactClient($contact, $accountId, $responseFields =  null)
	{
		$url = CustomerContactUrl::addAccountContactUrl($accountId, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($contact);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $accountId Unique identifier of the customer account whose contact information is being updated.
	* @param int $contactId Unique identifer of the customer account contact being updated.
	* @param string $responseFields 
	* @param string $userId 
	* @param CustomerContact $contact All properties the updated contact will have. Required properties: Name and email address.
	* @return MozuClient
	*/
	public static function updateAccountContactClient($contact, $accountId, $contactId, $userId =  null, $responseFields =  null)
	{
		$url = CustomerContactUrl::updateAccountContactUrl($accountId, $contactId, $responseFields, $userId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($contact);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param string $responseFields 
	* @param array|CustomerContact $contactList 
	* @return MozuClient
	*/
	public static function addAccountContactListClient($contactList, $accountId, $responseFields =  null)
	{
		$url = CustomerContactUrl::addAccountContactListUrl($accountId, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($contactList);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $accountId Unique identifier of the customer account.
	* @param int $contactId Unique identifier of the customer account contact to delete.
	* @return MozuClient
	*/
	public static function deleteAccountContactClient($accountId, $contactId)
	{
		$url = CustomerContactUrl::deleteAccountContactUrl($accountId, $contactId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

