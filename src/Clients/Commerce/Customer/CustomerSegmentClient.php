<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Customer;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Customer\CustomerSegmentUrl;


/**
* Use the Customer Segments resource to manage the segments that enable a client to manage groups of customers and target discounts for these segments. After a customer segment is defined, you can associate any number of customer accounts with it.
*/
class CustomerSegmentClient {

	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return MozuClient
	*/
	public static function getSegmentsClient($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$url = CustomerSegmentUrl::getSegmentsUrl($filter, $pageSize, $responseFields, $sortBy, $startIndex);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $id Unique identifier of the customer segment to retrieve.
	* @param string $responseFields 
	* @return MozuClient
	*/
	public static function getSegmentClient($id, $responseFields =  null)
	{
		$url = CustomerSegmentUrl::getSegmentUrl($id, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param CustomerSegment $segment Properties of the customer segment to add.
	* @return MozuClient
	*/
	public static function addSegmentClient($segment, $responseFields =  null)
	{
		$url = CustomerSegmentUrl::addSegmentUrl($responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($segment);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $id Unique identifier of the customer segment for which to add the associated customer accounts.
	* @param array|int $accountIds List of customer account IDs to add to the customer segment specified in the request.
	* @return MozuClient
	*/
	public static function addSegmentAccountsClient($accountIds, $id)
	{
		$url = CustomerSegmentUrl::addSegmentAccountsUrl($id);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($accountIds);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $id Unique identifier of the customer segment.
	* @param string $responseFields 
	* @param CustomerSegment $segment Properties of the customer segment to update.
	* @return MozuClient
	*/
	public static function updateSegmentClient($segment, $id, $responseFields =  null)
	{
		$url = CustomerSegmentUrl::updateSegmentUrl($id, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($segment);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $id Unique identifier of the customer segment to delete.
	* @return MozuClient
	*/
	public static function deleteSegmentClient($id)
	{
		$url = CustomerSegmentUrl::deleteSegmentUrl($id);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param int $id 
	* @return MozuClient
	*/
	public static function removeSegmentAccountClient($id, $accountId)
	{
		$url = CustomerSegmentUrl::removeSegmentAccountUrl($accountId, $id);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

