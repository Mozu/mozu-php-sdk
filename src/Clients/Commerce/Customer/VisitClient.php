<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Customer;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Customer\VisitUrl;


/**
* Use the Visits resource to manage all visits a customer makes to a tenant's sites and measure the level of transactions a customer performs during a unique visit for customer account analytics. Clients can track customer visits by site (including online and in-person interactions), the transactions a customer performs during the visit, and the device type associated with the visit, if any.
*/
class VisitClient {

	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return MozuClient
	*/
	public static function getVisitsClient($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$url = VisitUrl::getVisitsUrl($filter, $pageSize, $responseFields, $sortBy, $startIndex);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param string $visitId Unique identifier of the customer visit to retrieve.
	* @return MozuClient
	*/
	public static function getVisitClient($visitId, $responseFields =  null)
	{
		$url = VisitUrl::getVisitUrl($responseFields, $visitId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param Visit $visit Properties of the visit to add to the customer account.
	* @return MozuClient
	*/
	public static function addVisitClient($visit, $responseFields =  null)
	{
		$url = VisitUrl::addVisitUrl($responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($visit);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param string $visitId Unique identifier of the customer visit to update.
	* @param Visit $visit Properties of the customer visit to update.
	* @return MozuClient
	*/
	public static function updateVisitClient($visit, $visitId, $responseFields =  null)
	{
		$url = VisitUrl::updateVisitUrl($responseFields, $visitId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($visit);
		return $mozuClient;

	}
	
	
}

?>

