<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\WishlistUrl;


/**
* Use the Wish Lists resource to manage the shopper wish lists of products associated with a customer account. Although customer accounts are managed at the tenant level, the system stores shopper wish lists at the site level. This enables the same customer to have wish lists for each of a merchant's sites. Use the Wish List Items resource to manage items in a wish list.
*/
class WishlistClient {

	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $q A list of search terms to use in the query when searching across wish list name. Separate multiple search terms with a space character.
	* @param int $qLimit The maximum number of search results to return in the response. You can limit any range between 1-100.
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return MozuClient
	*/
	public static function getWishlistsClient($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $q =  null, $qLimit =  null, $responseFields =  null)
	{
		$url = WishlistUrl::getWishlistsUrl($filter, $pageSize, $q, $qLimit, $responseFields, $sortBy, $startIndex);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param string $wishlistId Unique identifier of the shopper wish list to retrieve.
	* @return MozuClient
	*/
	public static function getWishlistClient($wishlistId, $responseFields =  null)
	{
		$url = WishlistUrl::getWishlistUrl($responseFields, $wishlistId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $customerAccountId The unique identifier of the customer account for which to retrieve wish lists.
	* @param string $responseFields 
	* @param string $wishlistName The name of the wish list to retrieve.
	* @return MozuClient
	*/
	public static function getWishlistByNameClient($customerAccountId, $wishlistName, $responseFields =  null)
	{
		$url = WishlistUrl::getWishlistByNameUrl($customerAccountId, $responseFields, $wishlistName);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param Wishlist $wishlist Properties of the wish list to create.
	* @return MozuClient
	*/
	public static function createWishlistClient($wishlist, $responseFields =  null)
	{
		$url = WishlistUrl::createWishlistUrl($responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($wishlist);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param string $wishlistId Unique identifier of the shopper wish list to update.
	* @param Wishlist $wishlist Properties of the shopper wish list to update.
	* @return MozuClient
	*/
	public static function updateWishlistClient($wishlist, $wishlistId, $responseFields =  null)
	{
		$url = WishlistUrl::updateWishlistUrl($responseFields, $wishlistId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($wishlist);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $wishlistId Unique identifier of the wish list to delete.
	* @return MozuClient
	*/
	public static function deleteWishlistClient($wishlistId)
	{
		$url = WishlistUrl::deleteWishlistUrl($wishlistId);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

