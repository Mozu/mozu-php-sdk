<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\InStockNotificationSubscriptionUrl;


/**
* Use the Customer In-Stock Notification Subscription resource to manage the subscriptions customer accounts use to send product notifications. This resource can send a notification when a product in a catalog returns to a site's active inventory after it is out of stock, or when a new product becomes available for the first time.
*/
class InStockNotificationSubscriptionClient {

	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return MozuClient
	*/
	public static function getInStockNotificationSubscriptionsClient($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$url = InStockNotificationSubscriptionUrl::getInStockNotificationSubscriptionsUrl($filter, $pageSize, $responseFields, $sortBy, $startIndex);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $id Unique identifier of the in-stock notification subscription to retrieve.
	* @param string $responseFields 
	* @return MozuClient
	*/
	public static function getInStockNotificationSubscriptionClient($id, $responseFields =  null)
	{
		$url = InStockNotificationSubscriptionUrl::getInStockNotificationSubscriptionUrl($id, $responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param InStockNotificationSubscription $inStockNotificationSubscription Properties of a subscription that sends the customer a notification when a product is available in a site's active stock.
	* @return MozuClient
	*/
	public static function addInStockNotificationSubscriptionClient($inStockNotificationSubscription, $responseFields =  null)
	{
		$url = InStockNotificationSubscriptionUrl::addInStockNotificationSubscriptionUrl($responseFields);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url)->withBody($inStockNotificationSubscription);
		return $mozuClient;

	}
	
	/**
	* 
	*
	* @param int $id Unique identifier of the customer in-stock notification subscription to delete.
	* @return MozuClient
	*/
	public static function deleteInStockNotificationSubscriptionClient($id)
	{
		$url = InStockNotificationSubscriptionUrl::deleteInStockNotificationSubscriptionUrl($id);
		$mozuClient = new MozuClient();
		$mozuClient->withResourceUrl($url);
		return $mozuClient;

	}
	
	
}

?>

