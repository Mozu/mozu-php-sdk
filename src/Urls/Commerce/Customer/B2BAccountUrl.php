<?php

/*
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce\Customer;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class B2BAccountUrl  {

	/**
		* Get Resource Url for GetB2BAccounts
		* @param string $fields 
		* @param string $filter 
		* @param int $pageSize 
		* @param string $q 
		* @param int $qLimit 
		* @param string $responseFields 
		* @param string $sortBy 
		* @param int $startIndex 
		* @return string Resource Url
	*/
	public static function getB2BAccountsUrl($fields, $filter, $pageSize, $q, $qLimit, $responseFields, $sortBy, $startIndex)
	{
		$url = "/api/commerce/customer/b2baccounts/?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&fields={fields}&q={q}&qLimit={qLimit}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("fields", $fields);
		$url = $mozuUrl->formatUrl("filter", $filter);
		$url = $mozuUrl->formatUrl("pageSize", $pageSize);
		$url = $mozuUrl->formatUrl("q", $q);
		$url = $mozuUrl->formatUrl("qLimit", $qLimit);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("sortBy", $sortBy);
		$url = $mozuUrl->formatUrl("startIndex", $startIndex);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetB2BAccountAttribute
		* @param int $accountId 
		* @param string $attributeFQN 
		* @param string $responseFields 
		* @return string Resource Url
	*/
	public static function getB2BAccountAttributeUrl($accountId, $attributeFQN, $responseFields)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}/attributes/{attributeFQN}?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("attributeFQN", $attributeFQN);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetB2BAccountAttributes
		* @param int $accountId 
		* @param string $filter 
		* @param int $pageSize 
		* @param string $responseFields 
		* @param string $sortBy 
		* @param int $startIndex 
		* @return string Resource Url
	*/
	public static function getB2BAccountAttributesUrl($accountId, $filter, $pageSize, $responseFields, $sortBy, $startIndex)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}/attributes?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("filter", $filter);
		$url = $mozuUrl->formatUrl("pageSize", $pageSize);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("sortBy", $sortBy);
		$url = $mozuUrl->formatUrl("startIndex", $startIndex);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetUserRolesAsync
		* @param int $accountId 
		* @param string $responseFields 
		* @param string $userId 
		* @return string Resource Url
	*/
	public static function getUserRolesAsyncUrl($accountId, $responseFields, $userId)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}/user/{userId}/roles?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("userId", $userId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetUsers
		* @param int $accountId 
		* @param string $filter 
		* @param int $pageSize 
		* @param string $q 
		* @param int $qLimit 
		* @param string $responseFields 
		* @param string $sortBy 
		* @param int $startIndex 
		* @return string Resource Url
	*/
	public static function getUsersUrl($accountId, $filter, $pageSize, $q, $qLimit, $responseFields, $sortBy, $startIndex)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}/users?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&q={q}&qLimit={qLimit}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("filter", $filter);
		$url = $mozuUrl->formatUrl("pageSize", $pageSize);
		$url = $mozuUrl->formatUrl("q", $q);
		$url = $mozuUrl->formatUrl("qLimit", $qLimit);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("sortBy", $sortBy);
		$url = $mozuUrl->formatUrl("startIndex", $startIndex);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetB2BAccount
		* @param int $accountId 
		* @param string $responseFields 
		* @return string Resource Url
	*/
	public static function getB2BAccountUrl($accountId, $responseFields)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for AddAccount
		* @param string $responseFields 
		* @return string Resource Url
	*/
	public static function addAccountUrl($responseFields)
	{
		$url = "/api/commerce/customer/b2baccounts/?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for AddB2BAccountAttribute
		* @param int $accountId 
		* @param string $responseFields 
		* @return string Resource Url
	*/
	public static function addB2BAccountAttributeUrl($accountId, $responseFields)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}/attributes?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for AddUserRoleAsync
		* @param int $accountId 
		* @param int $roleId 
		* @param string $userId 
		* @return string Resource Url
	*/
	public static function addUserRoleAsyncUrl($accountId, $roleId, $userId)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}/user/{userId}/roles/{roleId}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("roleId", $roleId);
		$url = $mozuUrl->formatUrl("userId", $userId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for AddUser
		* @param int $accountId 
		* @param string $responseFields 
		* @return string Resource Url
	*/
	public static function addUserUrl($accountId, $responseFields)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}/user?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for UpdateB2BAccountAttribute
		* @param int $accountId 
		* @param string $attributeFQN 
		* @param string $responseFields 
		* @return string Resource Url
	*/
	public static function updateB2BAccountAttributeUrl($accountId, $attributeFQN, $responseFields)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}/attributes/{attributeFQN}?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"PUT", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("attributeFQN", $attributeFQN);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for RemoveUser
		* @param int $accountId 
		* @param string $userId 
		* @return string Resource Url
	*/
	public static function removeUserUrl($accountId, $userId)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}/user/{userId}/remove";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"PUT", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("userId", $userId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for UpdateUser
		* @param int $accountId 
		* @param string $responseFields 
		* @param string $userId 
		* @return string Resource Url
	*/
	public static function updateUserUrl($accountId, $responseFields, $userId)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}/user/{userId}?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"PUT", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("userId", $userId);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for UpdateAccount
		* @param int $accountId 
		* @param string $responseFields 
		* @return string Resource Url
	*/
	public static function updateAccountUrl($accountId, $responseFields)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"PUT", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for DeleteB2BAccountAttribute
		* @param int $accountId 
		* @param string $attributeFQN 
		* @return string Resource Url
	*/
	public static function deleteB2BAccountAttributeUrl($accountId, $attributeFQN)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}/attributes/{attributeFQN}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("attributeFQN", $attributeFQN);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for RemoveUserRoleAsync
		* @param int $accountId 
		* @param int $roleId 
		* @param string $userId 
		* @return string Resource Url
	*/
	public static function removeUserRoleAsyncUrl($accountId, $roleId, $userId)
	{
		$url = "/api/commerce/customer/b2baccounts/{accountId}/user/{userId}/roles/{roleId}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE", false) ;
		$url = $mozuUrl->formatUrl("accountId", $accountId);
		$url = $mozuUrl->formatUrl("roleId", $roleId);
		$url = $mozuUrl->formatUrl("userId", $userId);
		return $mozuUrl;
	}
	
}

?>

