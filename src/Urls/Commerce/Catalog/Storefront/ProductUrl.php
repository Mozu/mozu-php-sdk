<?php

/*
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce\Catalog\Storefront;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class ProductUrl  {

	/**
		* Get Resource Url for GetProducts
		* @param string $cursorMark 
		* @param string $defaultSort 
		* @param string $filter 
		* @param int $pageSize Used to page results from a query. Indicates the maximum number of entities to return from a single query. Default value: 20. Maximum value: 200.
		* @param string $responseFields 
		* @param string $responseOptions 
		* @param string $sortBy 
		* @param int $startIndex 
		* @return string Resource Url
	*/
	public static function getProductsUrl($cursorMark, $defaultSort, $filter, $pageSize, $responseFields, $responseOptions, $sortBy, $startIndex)
	{
		$url = "/api/commerce/catalog/storefront/products/?filter={filter}&startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&responseOptions={responseOptions}&cursorMark={cursorMark}&defaultSort={defaultSort}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("cursorMark", $cursorMark);
		$url = $mozuUrl->formatUrl("defaultSort", $defaultSort);
		$url = $mozuUrl->formatUrl("filter", $filter);
		$url = $mozuUrl->formatUrl("pageSize", $pageSize);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("responseOptions", $responseOptions);
		$url = $mozuUrl->formatUrl("sortBy", $sortBy);
		$url = $mozuUrl->formatUrl("startIndex", $startIndex);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetProductInventory
		* @param string $locationCodes Array of location codes for which to retrieve product inventory information.
		* @param string $productCode 
		* @param string $responseFields 
		* @return string Resource Url
	*/
	public static function getProductInventoryUrl($locationCodes, $productCode, $responseFields)
	{
		$url = "/api/commerce/catalog/storefront/products/{productCode}/locationinventory?locationCodes={locationCodes}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("locationCodes", $locationCodes);
		$url = $mozuUrl->formatUrl("productCode", $productCode);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetProduct
		* @param bool $acceptVariantProductCode 
		* @param bool $allowInactive If true, returns an inactive product as part of the query.
		* @param string $productCode 
		* @param string $purchaseLocation 
		* @param int $quantity 
		* @param string $responseFields 
		* @param bool $skipInventoryCheck If true, skip the inventory validation process for the specified product.
		* @param bool $supressOutOfStock404 
		* @param string $variationProductCode Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
		* @param string $variationProductCodeFilter 
		* @return string Resource Url
	*/
	public static function getProductUrl($acceptVariantProductCode, $allowInactive, $productCode, $purchaseLocation, $quantity, $responseFields, $skipInventoryCheck, $supressOutOfStock404, $variationProductCode, $variationProductCodeFilter)
	{
		$url = "/api/commerce/catalog/storefront/products/{productCode}?variationProductCode={variationProductCode}&allowInactive={allowInactive}&skipInventoryCheck={skipInventoryCheck}&supressOutOfStock404={supressOutOfStock404}&quantity={quantity}&acceptVariantProductCode={acceptVariantProductCode}&purchaseLocation={purchaseLocation}&variationProductCodeFilter={variationProductCodeFilter}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("acceptVariantProductCode", $acceptVariantProductCode);
		$url = $mozuUrl->formatUrl("allowInactive", $allowInactive);
		$url = $mozuUrl->formatUrl("productCode", $productCode);
		$url = $mozuUrl->formatUrl("purchaseLocation", $purchaseLocation);
		$url = $mozuUrl->formatUrl("quantity", $quantity);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("skipInventoryCheck", $skipInventoryCheck);
		$url = $mozuUrl->formatUrl("supressOutOfStock404", $supressOutOfStock404);
		$url = $mozuUrl->formatUrl("variationProductCode", $variationProductCode);
		$url = $mozuUrl->formatUrl("variationProductCodeFilter", $variationProductCodeFilter);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetProductForIndexing
		* @param datetime $lastModifiedDate 
		* @param string $productCode 
		* @param long $productVersion 
		* @param string $responseFields 
		* @return string Resource Url
	*/
	public static function getProductForIndexingUrl($lastModifiedDate, $productCode, $productVersion, $responseFields)
	{
		$url = "/api/commerce/catalog/storefront/products/indexing/{productCode}?productVersion={productVersion}&lastModifiedDate={lastModifiedDate}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false) ;
		$url = $mozuUrl->formatUrl("lastModifiedDate", $lastModifiedDate);
		$url = $mozuUrl->formatUrl("productCode", $productCode);
		$url = $mozuUrl->formatUrl("productVersion", $productVersion);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for ConfiguredProduct
		* @param bool $includeOptionDetails If true, the response returns details about the product. If false, returns a product summary such as the product name, price, and sale price.
		* @param string $productCode 
		* @param string $purchaseLocation 
		* @param int $quantity 
		* @param string $responseFields 
		* @param bool $skipInventoryCheck If true, skip the inventory validation process for the specified product.
		* @param string $variationProductCodeFilter 
		* @return string Resource Url
	*/
	public static function configuredProductUrl($includeOptionDetails, $productCode, $purchaseLocation, $quantity, $responseFields, $skipInventoryCheck, $variationProductCodeFilter)
	{
		$url = "/api/commerce/catalog/storefront/products/{productCode}/configure?includeOptionDetails={includeOptionDetails}&skipInventoryCheck={skipInventoryCheck}&quantity={quantity}&purchaseLocation={purchaseLocation}&variationProductCodeFilter={variationProductCodeFilter}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("includeOptionDetails", $includeOptionDetails);
		$url = $mozuUrl->formatUrl("productCode", $productCode);
		$url = $mozuUrl->formatUrl("purchaseLocation", $purchaseLocation);
		$url = $mozuUrl->formatUrl("quantity", $quantity);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("skipInventoryCheck", $skipInventoryCheck);
		$url = $mozuUrl->formatUrl("variationProductCodeFilter", $variationProductCodeFilter);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for ValidateProduct
		* @param string $productCode 
		* @param string $purchaseLocation 
		* @param int $quantity 
		* @param string $responseFields 
		* @param bool $skipDefaults 
		* @param bool $skipInventoryCheck If true, skip the inventory validation process for the specified product.
		* @return string Resource Url
	*/
	public static function validateProductUrl($productCode, $purchaseLocation, $quantity, $responseFields, $skipDefaults, $skipInventoryCheck)
	{
		$url = "/api/commerce/catalog/storefront/products/{productCode}/validate?skipInventoryCheck={skipInventoryCheck}&quantity={quantity}&skipDefaults={skipDefaults}&purchaseLocation={purchaseLocation}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("productCode", $productCode);
		$url = $mozuUrl->formatUrl("purchaseLocation", $purchaseLocation);
		$url = $mozuUrl->formatUrl("quantity", $quantity);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("skipDefaults", $skipDefaults);
		$url = $mozuUrl->formatUrl("skipInventoryCheck", $skipInventoryCheck);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for ValidateDiscounts
		* @param bool $allowInactive If true, this operation returns inactive product discounts as part of the POST.
		* @param int $customerAccountId Unique ID of the customer account associated with the shopper requesting the discount.
		* @param string $productCode 
		* @param string $responseFields 
		* @param bool $skipInventoryCheck If true, do not validate the product inventory when evaluating the list of discounts.
		* @param string $variationProductCode Merchant-created code associated with a specific product variation. Variation product codes maintain an association with the base product code.
		* @return string Resource Url
	*/
	public static function validateDiscountsUrl($allowInactive, $customerAccountId, $productCode, $responseFields, $skipInventoryCheck, $variationProductCode)
	{
		$url = "/api/commerce/catalog/storefront/products/{productCode}/validateDiscounts?variationProductCode={variationProductCode}&customerAccountId={customerAccountId}&allowInactive={allowInactive}&skipInventoryCheck={skipInventoryCheck}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("allowInactive", $allowInactive);
		$url = $mozuUrl->formatUrl("customerAccountId", $customerAccountId);
		$url = $mozuUrl->formatUrl("productCode", $productCode);
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		$url = $mozuUrl->formatUrl("skipInventoryCheck", $skipInventoryCheck);
		$url = $mozuUrl->formatUrl("variationProductCode", $variationProductCode);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetProductCosts
		* @param string $responseFields 
		* @return string Resource Url
	*/
	public static function getProductCostsUrl($responseFields)
	{
		$url = "/api/commerce/catalog/storefront/products/costs?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetProductInventories
		* @param string $responseFields 
		* @return string Resource Url
	*/
	public static function getProductInventoriesUrl($responseFields)
	{
		$url = "/api/commerce/catalog/storefront/products/locationinventory?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false) ;
		$url = $mozuUrl->formatUrl("responseFields", $responseFields);
		return $mozuUrl;
	}
	
}

?>

