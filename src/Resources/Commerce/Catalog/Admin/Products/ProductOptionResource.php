<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Catalog\Admin\Products;

use Mozu\Api\Clients\Commerce\Catalog\Admin\Products\ProductOptionClient;
use Mozu\Api\ApiContext;

use Mozu\Api\Headers;

/**
* Use the Options resource to configure the option attributes and vocabulary values for an individual product associated with the product type that uses the option attribute. Options are used to generate variations of a product.
*/
class ProductOptionResource {

		private $apiContext;
		private $dataViewMode;
		public function __construct(ApiContext $apiContext, $dataViewMode) 
	{
		$this->apiContext = $apiContext;
		$this->dataViewMode = $dataViewMode;
	}
	



	/**
	* 
	*
	* @param string $productCode 
	* @return array|ProductOption 
	* @deprecated deprecated since version 1.17
	*/
	public function getOptions($productCode)
	{
		$mozuClient = ProductOptionClient::getOptionsClient($this->dataViewMode, $productCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $productCode 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getOptionsAsync($productCode)
	{
		$mozuClient = ProductOptionClient::getOptionsClient($this->dataViewMode, $productCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $attributeFQN 
	* @param string $productCode 
	* @param string $responseFields 
	* @return ProductOption 
	* @deprecated deprecated since version 1.17
	*/
	public function getOption($productCode, $attributeFQN, $responseFields =  null)
	{
		$mozuClient = ProductOptionClient::getOptionClient($this->dataViewMode, $productCode, $attributeFQN, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $attributeFQN 
	* @param string $productCode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getOptionAsync($productCode, $attributeFQN, $responseFields =  null)
	{
		$mozuClient = ProductOptionClient::getOptionClient($this->dataViewMode, $productCode, $attributeFQN, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $productCode 
	* @param string $responseFields 
	* @param ProductOption $productOption Properties of the option attribute to define for the product.
	* @return ProductOption 
	* @deprecated deprecated since version 1.17
	*/
	public function addOption($productOption, $productCode, $responseFields =  null)
	{
		$mozuClient = ProductOptionClient::addOptionClient($this->dataViewMode, $productOption, $productCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $productCode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function addOptionAsync($productOption, $productCode, $responseFields =  null)
	{
		$mozuClient = ProductOptionClient::addOptionClient($this->dataViewMode, $productOption, $productCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $attributeFQN 
	* @param string $productCode 
	* @param string $responseFields 
	* @param ProductOption $productOption Properties of the product option attribute configuration to update.
	* @return ProductOption 
	* @deprecated deprecated since version 1.17
	*/
	public function updateOption($productOption, $productCode, $attributeFQN, $responseFields =  null)
	{
		$mozuClient = ProductOptionClient::updateOptionClient($this->dataViewMode, $productOption, $productCode, $attributeFQN, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $attributeFQN 
	* @param string $productCode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateOptionAsync($productOption, $productCode, $attributeFQN, $responseFields =  null)
	{
		$mozuClient = ProductOptionClient::updateOptionClient($this->dataViewMode, $productOption, $productCode, $attributeFQN, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $attributeFQN 
	* @param string $productCode 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteOption($productCode, $attributeFQN)
	{
		$mozuClient = ProductOptionClient::deleteOptionClient($this->dataViewMode, $productCode, $attributeFQN);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $attributeFQN 
	* @param string $productCode 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteOptionAsync($productCode, $attributeFQN)
	{
		$mozuClient = ProductOptionClient::deleteOptionClient($this->dataViewMode, $productCode, $attributeFQN);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

