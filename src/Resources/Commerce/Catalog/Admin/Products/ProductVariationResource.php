<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Catalog\Admin\Products;

use Mozu\Api\Clients\Commerce\Catalog\Admin\Products\ProductVariationClient;
use Mozu\Api\ApiContext;

use Mozu\Api\Headers;

/**
* Use the product variations sub-resource to manage the variations of a product based on its attributes. For example, a t-shirt product could be offered in six variations: Small Black, Medium Black, Large Black, Small White, Medium White, and Large White.
*/
class ProductVariationResource {

		private $apiContext;
		private $dataViewMode;
		public function __construct(ApiContext $apiContext, $dataViewMode) 
	{
		$this->apiContext = $apiContext;
		$this->dataViewMode = $dataViewMode;
	}
	



	/**
	* 
	*
	* @param string $productCode 
	* @param string $variationKey 
	* @return array|ProductVariationDeltaPrice 
	* @deprecated deprecated since version 1.17
	*/
	public function getProductVariationLocalizedDeltaPrices($productCode, $variationKey)
	{
		$mozuClient = ProductVariationClient::getProductVariationLocalizedDeltaPricesClient($this->dataViewMode, $productCode, $variationKey);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $productCode 
	* @param string $variationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getProductVariationLocalizedDeltaPricesAsync($productCode, $variationKey)
	{
		$mozuClient = ProductVariationClient::getProductVariationLocalizedDeltaPricesClient($this->dataViewMode, $productCode, $variationKey);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey 
	* @return ProductVariationDeltaPrice 
	* @deprecated deprecated since version 1.17
	*/
	public function getProductVariationLocalizedDeltaPrice($productCode, $variationKey, $currencyCode, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::getProductVariationLocalizedDeltaPriceClient($this->dataViewMode, $productCode, $variationKey, $currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getProductVariationLocalizedDeltaPriceAsync($productCode, $variationKey, $currencyCode, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::getProductVariationLocalizedDeltaPriceClient($this->dataViewMode, $productCode, $variationKey, $currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $productCode 
	* @param string $variationKey 
	* @return array|ProductVariationFixedPrice 
	* @deprecated deprecated since version 1.17
	*/
	public function getProductVariationLocalizedPrices($productCode, $variationKey)
	{
		$mozuClient = ProductVariationClient::getProductVariationLocalizedPricesClient($this->dataViewMode, $productCode, $variationKey);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $productCode 
	* @param string $variationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getProductVariationLocalizedPricesAsync($productCode, $variationKey)
	{
		$mozuClient = ProductVariationClient::getProductVariationLocalizedPricesClient($this->dataViewMode, $productCode, $variationKey);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey 
	* @return ProductVariationFixedPrice 
	* @deprecated deprecated since version 1.17
	*/
	public function getProductVariationLocalizedPrice($productCode, $variationKey, $currencyCode, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::getProductVariationLocalizedPriceClient($this->dataViewMode, $productCode, $variationKey, $currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getProductVariationLocalizedPriceAsync($productCode, $variationKey, $currencyCode, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::getProductVariationLocalizedPriceClient($this->dataViewMode, $productCode, $variationKey, $currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey System-generated key that represents the attribute values that uniquely identify a specific product variation.
	* @return ProductVariation 
	* @deprecated deprecated since version 1.17
	*/
	public function getProductVariation($productCode, $variationKey, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::getProductVariationClient($this->dataViewMode, $productCode, $variationKey, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey System-generated key that represents the attribute values that uniquely identify a specific product variation.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getProductVariationAsync($productCode, $variationKey, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::getProductVariationClient($this->dataViewMode, $productCode, $variationKey, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return ProductVariationPagedCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getProductVariations($productCode, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::getProductVariationsClient($this->dataViewMode, $productCode, $startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getProductVariationsAsync($productCode, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::getProductVariationsClient($this->dataViewMode, $productCode, $startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey 
	* @param ProductVariationDeltaPrice $localizedDeltaPrice 
	* @return ProductVariationDeltaPrice 
	* @deprecated deprecated since version 1.17
	*/
	public function addProductVariationLocalizedDeltaPrice($localizedDeltaPrice, $productCode, $variationKey, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::addProductVariationLocalizedDeltaPriceClient($this->dataViewMode, $localizedDeltaPrice, $productCode, $variationKey, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function addProductVariationLocalizedDeltaPriceAsync($localizedDeltaPrice, $productCode, $variationKey, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::addProductVariationLocalizedDeltaPriceClient($this->dataViewMode, $localizedDeltaPrice, $productCode, $variationKey, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey 
	* @param ProductVariationFixedPrice $localizedPrice 
	* @return ProductVariationFixedPrice 
	* @deprecated deprecated since version 1.17
	*/
	public function addProductVariationLocalizedPrice($localizedPrice, $productCode, $variationKey, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::addProductVariationLocalizedPriceClient($this->dataViewMode, $localizedPrice, $productCode, $variationKey, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function addProductVariationLocalizedPriceAsync($localizedPrice, $productCode, $variationKey, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::addProductVariationLocalizedPriceClient($this->dataViewMode, $localizedPrice, $productCode, $variationKey, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $productCode 
	* @param string $variationKey 
	* @param array|ProductVariationDeltaPrice $localizedDeltaPrice 
	* @return array|ProductVariationDeltaPrice 
	* @deprecated deprecated since version 1.17
	*/
	public function updateProductVariationLocalizedDeltaPrices($localizedDeltaPrice, $productCode, $variationKey)
	{
		$mozuClient = ProductVariationClient::updateProductVariationLocalizedDeltaPricesClient($this->dataViewMode, $localizedDeltaPrice, $productCode, $variationKey);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $productCode 
	* @param string $variationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateProductVariationLocalizedDeltaPricesAsync($localizedDeltaPrice, $productCode, $variationKey)
	{
		$mozuClient = ProductVariationClient::updateProductVariationLocalizedDeltaPricesClient($this->dataViewMode, $localizedDeltaPrice, $productCode, $variationKey);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey 
	* @param ProductVariationDeltaPrice $localizedDeltaPrice 
	* @return ProductVariationDeltaPrice 
	* @deprecated deprecated since version 1.17
	*/
	public function updateProductVariationLocalizedDeltaPrice($localizedDeltaPrice, $productCode, $variationKey, $currencyCode, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::updateProductVariationLocalizedDeltaPriceClient($this->dataViewMode, $localizedDeltaPrice, $productCode, $variationKey, $currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateProductVariationLocalizedDeltaPriceAsync($localizedDeltaPrice, $productCode, $variationKey, $currencyCode, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::updateProductVariationLocalizedDeltaPriceClient($this->dataViewMode, $localizedDeltaPrice, $productCode, $variationKey, $currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $productCode 
	* @param string $variationKey 
	* @param array|ProductVariationFixedPrice $localizedPrice 
	* @return array|ProductVariationFixedPrice 
	* @deprecated deprecated since version 1.17
	*/
	public function updateProductVariationLocalizedPrices($localizedPrice, $productCode, $variationKey)
	{
		$mozuClient = ProductVariationClient::updateProductVariationLocalizedPricesClient($this->dataViewMode, $localizedPrice, $productCode, $variationKey);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $productCode 
	* @param string $variationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateProductVariationLocalizedPricesAsync($localizedPrice, $productCode, $variationKey)
	{
		$mozuClient = ProductVariationClient::updateProductVariationLocalizedPricesClient($this->dataViewMode, $localizedPrice, $productCode, $variationKey);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey 
	* @param ProductVariationFixedPrice $localizedPrice 
	* @return ProductVariationFixedPrice 
	* @deprecated deprecated since version 1.17
	*/
	public function updateProductVariationLocalizedPrice($localizedPrice, $productCode, $variationKey, $currencyCode, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::updateProductVariationLocalizedPriceClient($this->dataViewMode, $localizedPrice, $productCode, $variationKey, $currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateProductVariationLocalizedPriceAsync($localizedPrice, $productCode, $variationKey, $currencyCode, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::updateProductVariationLocalizedPriceClient($this->dataViewMode, $localizedPrice, $productCode, $variationKey, $currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey System-generated key that represents the attribute values that uniquely identify a specific product variation.
	* @param ProductVariation $productVariation Wrapper for the properties of the specified product variation.
	* @return ProductVariation 
	* @deprecated deprecated since version 1.17
	*/
	public function updateProductVariation($productVariation, $productCode, $variationKey, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::updateProductVariationClient($this->dataViewMode, $productVariation, $productCode, $variationKey, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $productCode 
	* @param string $responseFields 
	* @param string $variationKey System-generated key that represents the attribute values that uniquely identify a specific product variation.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateProductVariationAsync($productVariation, $productCode, $variationKey, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::updateProductVariationClient($this->dataViewMode, $productVariation, $productCode, $variationKey, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $productCode 
	* @param string $responseFields 
	* @param ProductVariationCollection $productVariations Wrapper for the collection of variations configured for the specified product code.
	* @return ProductVariationCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function updateProductVariations($productVariations, $productCode, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::updateProductVariationsClient($this->dataViewMode, $productVariations, $productCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $productCode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateProductVariationsAsync($productVariations, $productCode, $responseFields =  null)
	{
		$mozuClient = ProductVariationClient::updateProductVariationsClient($this->dataViewMode, $productVariations, $productCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $productCode 
	* @param string $variationKey System-generated key that represents the attribute values that uniquely identify a specific product variation.
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteProductVariation($productCode, $variationKey)
	{
		$mozuClient = ProductVariationClient::deleteProductVariationClient($this->dataViewMode, $productCode, $variationKey);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $productCode 
	* @param string $variationKey System-generated key that represents the attribute values that uniquely identify a specific product variation.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteProductVariationAsync($productCode, $variationKey)
	{
		$mozuClient = ProductVariationClient::deleteProductVariationClient($this->dataViewMode, $productCode, $variationKey);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $variationKey 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteProductVariationLocalizedDeltaPrice($productCode, $variationKey, $currencyCode)
	{
		$mozuClient = ProductVariationClient::deleteProductVariationLocalizedDeltaPriceClient($this->dataViewMode, $productCode, $variationKey, $currencyCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $variationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteProductVariationLocalizedDeltaPriceAsync($productCode, $variationKey, $currencyCode)
	{
		$mozuClient = ProductVariationClient::deleteProductVariationLocalizedDeltaPriceClient($this->dataViewMode, $productCode, $variationKey, $currencyCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $variationKey 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteProductVariationLocalizedPrice($productCode, $variationKey, $currencyCode)
	{
		$mozuClient = ProductVariationClient::deleteProductVariationLocalizedPriceClient($this->dataViewMode, $productCode, $variationKey, $currencyCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $variationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteProductVariationLocalizedPriceAsync($productCode, $variationKey, $currencyCode)
	{
		$mozuClient = ProductVariationClient::deleteProductVariationLocalizedPriceClient($this->dataViewMode, $productCode, $variationKey, $currencyCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

