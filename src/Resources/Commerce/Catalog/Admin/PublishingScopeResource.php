<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Catalog\Admin;

use Mozu\Api\Clients\Commerce\Catalog\Admin\PublishingScopeClient;
use Mozu\Api\ApiContext;

use Mozu\Api\Headers;

/**
* Use the Product Publishing resource to publish or discard pending changes to product definitions in the master catalog.
*/
class PublishingScopeResource {

		private $apiContext;
		private $dataViewMode;
		public function __construct(ApiContext $apiContext, $dataViewMode) 
	{
		$this->apiContext = $apiContext;
		$this->dataViewMode = $dataViewMode;
	}
	



	/**
	* 
	*
	* @param string $publishSetCode 
	* @param string $responseFields 
	* @return PublishSet 
	* @deprecated deprecated since version 1.17
	*/
	public function getPublishSet($publishSetCode, $responseFields =  null)
	{
		$mozuClient = PublishingScopeClient::getPublishSetClient($publishSetCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $publishSetCode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getPublishSetAsync($publishSetCode, $responseFields =  null)
	{
		$mozuClient = PublishingScopeClient::getPublishSetClient($publishSetCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @return PublishSetCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getPublishSets($responseFields =  null)
	{
		$mozuClient = PublishingScopeClient::getPublishSetsClient($responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getPublishSetsAsync($responseFields =  null)
	{
		$mozuClient = PublishingScopeClient::getPublishSetsClient($responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param PublishingScope $publishScope Properties of the pending product changes to include in this operation.
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function discardDrafts($publishScope)
	{
		$mozuClient = PublishingScopeClient::discardDraftsClient($this->dataViewMode, $publishScope);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function discardDraftsAsync($publishScope)
	{
		$mozuClient = PublishingScopeClient::discardDraftsClient($this->dataViewMode, $publishScope);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param PublishingScope $publishScope Properties of the pending product changes to include in this operation.
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function publishDrafts($publishScope)
	{
		$mozuClient = PublishingScopeClient::publishDraftsClient($this->dataViewMode, $publishScope);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function publishDraftsAsync($publishScope)
	{
		$mozuClient = PublishingScopeClient::publishDraftsClient($this->dataViewMode, $publishScope);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param PublishSet $publishSet 
	* @return PublishSet 
	* @deprecated deprecated since version 1.17
	*/
	public function assignProductsToPublishSet($publishSet, $responseFields =  null)
	{
		$mozuClient = PublishingScopeClient::assignProductsToPublishSetClient($publishSet, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function assignProductsToPublishSetAsync($publishSet, $responseFields =  null)
	{
		$mozuClient = PublishingScopeClient::assignProductsToPublishSetClient($publishSet, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param bool $discardDrafts 
	* @param string $publishSetCode 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deletePublishSet($publishSetCode, $discardDrafts =  null)
	{
		$mozuClient = PublishingScopeClient::deletePublishSetClient($publishSetCode, $discardDrafts);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param bool $discardDrafts 
	* @param string $publishSetCode 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deletePublishSetAsync($publishSetCode, $discardDrafts =  null)
	{
		$mozuClient = PublishingScopeClient::deletePublishSetClient($publishSetCode, $discardDrafts);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

