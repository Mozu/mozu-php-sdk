<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Catalog\Admin;

use Mozu\Api\Clients\Commerce\Catalog\Admin\CurrencyLocalizationClient;
use Mozu\Api\ApiContext;


/**
* 
*/
class CurrencyLocalizationResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $responseFields 
	* @return CurrencyLocalizationCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getCurrencyLocalizations($responseFields =  null)
	{
		$mozuClient = CurrencyLocalizationClient::getCurrencyLocalizationsClient($responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getCurrencyLocalizationsAsync($responseFields =  null)
	{
		$mozuClient = CurrencyLocalizationClient::getCurrencyLocalizationsClient($responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param string $responseFields 
	* @param string $toCurrencyCode 
	* @return CurrencyExchangeRate 
	* @deprecated deprecated since version 1.17
	*/
	public function getCurrencyExchangeRate($currencyCode, $toCurrencyCode, $responseFields =  null)
	{
		$mozuClient = CurrencyLocalizationClient::getCurrencyExchangeRateClient($currencyCode, $toCurrencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @param string $responseFields 
	* @param string $toCurrencyCode 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getCurrencyExchangeRateAsync($currencyCode, $toCurrencyCode, $responseFields =  null)
	{
		$mozuClient = CurrencyLocalizationClient::getCurrencyExchangeRateClient($currencyCode, $toCurrencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param string $responseFields 
	* @return CurrencyExchangeRateCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getCurrencyExchangeRates($currencyCode, $responseFields =  null)
	{
		$mozuClient = CurrencyLocalizationClient::getCurrencyExchangeRatesClient($currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getCurrencyExchangeRatesAsync($currencyCode, $responseFields =  null)
	{
		$mozuClient = CurrencyLocalizationClient::getCurrencyExchangeRatesClient($currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param string $responseFields 
	* @return CurrencyLocalization 
	* @deprecated deprecated since version 1.17
	*/
	public function getCurrencyLocalization($currencyCode, $responseFields =  null)
	{
		$mozuClient = CurrencyLocalizationClient::getCurrencyLocalizationClient($currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getCurrencyLocalizationAsync($currencyCode, $responseFields =  null)
	{
		$mozuClient = CurrencyLocalizationClient::getCurrencyLocalizationClient($currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param CurrencyLocalization $currencyLocalization 
	* @return CurrencyLocalization 
	* @deprecated deprecated since version 1.17
	*/
	public function addCurrencyLocalization($currencyLocalization, $responseFields =  null)
	{
		$mozuClient = CurrencyLocalizationClient::addCurrencyLocalizationClient($currencyLocalization, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function addCurrencyLocalizationAsync($currencyLocalization, $responseFields =  null)
	{
		$mozuClient = CurrencyLocalizationClient::addCurrencyLocalizationClient($currencyLocalization, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param array|CurrencyExchangeRate $currencyExchangeRates 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function addCurrencyExchangeRates($currencyExchangeRates, $currencyCode)
	{
		$mozuClient = CurrencyLocalizationClient::addCurrencyExchangeRatesClient($currencyExchangeRates, $currencyCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function addCurrencyExchangeRatesAsync($currencyExchangeRates, $currencyCode)
	{
		$mozuClient = CurrencyLocalizationClient::addCurrencyExchangeRatesClient($currencyExchangeRates, $currencyCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param array|CurrencyExchangeRate $currencyExchangeRates 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function updateCurrencyExchangeRates($currencyExchangeRates, $currencyCode)
	{
		$mozuClient = CurrencyLocalizationClient::updateCurrencyExchangeRatesClient($currencyExchangeRates, $currencyCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateCurrencyExchangeRatesAsync($currencyExchangeRates, $currencyCode)
	{
		$mozuClient = CurrencyLocalizationClient::updateCurrencyExchangeRatesClient($currencyExchangeRates, $currencyCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param string $responseFields 
	* @param CurrencyLocalization $currencyLocalization 
	* @return CurrencyLocalization 
	* @deprecated deprecated since version 1.17
	*/
	public function updateCurrencyLocalization($currencyLocalization, $currencyCode, $responseFields =  null)
	{
		$mozuClient = CurrencyLocalizationClient::updateCurrencyLocalizationClient($currencyLocalization, $currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateCurrencyLocalizationAsync($currencyLocalization, $currencyCode, $responseFields =  null)
	{
		$mozuClient = CurrencyLocalizationClient::updateCurrencyLocalizationClient($currencyLocalization, $currencyCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteCurrencyLocalization($currencyCode)
	{
		$mozuClient = CurrencyLocalizationClient::deleteCurrencyLocalizationClient($currencyCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteCurrencyLocalizationAsync($currencyCode)
	{
		$mozuClient = CurrencyLocalizationClient::deleteCurrencyLocalizationClient($currencyCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $currencyCode 
	* @param string $toCurrencyCode 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteCurrencyExchangeRate($currencyCode, $toCurrencyCode)
	{
		$mozuClient = CurrencyLocalizationClient::deleteCurrencyExchangeRateClient($currencyCode, $toCurrencyCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $currencyCode 
	* @param string $toCurrencyCode 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteCurrencyExchangeRateAsync($currencyCode, $toCurrencyCode)
	{
		$mozuClient = CurrencyLocalizationClient::deleteCurrencyExchangeRateClient($currencyCode, $toCurrencyCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

