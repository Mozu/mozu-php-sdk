<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Catalog\Admin\Attributedefinition\Producttypes;

use Mozu\Api\Clients\Commerce\Catalog\Admin\Attributedefinition\Producttypes\ProductTypeExtraClient;
use Mozu\Api\ApiContext;

use Mozu\Api\Headers;

/**
* Use the Extras subresource to define how a product attribute classified as an "extra" is used for a specific product type. Product attribute defintions are unique for each associated product type.
*/
class ProductTypeExtraResource {

		private $apiContext;
		private $dataViewMode;
		public function __construct(ApiContext $apiContext, $dataViewMode) 
	{
		$this->apiContext = $apiContext;
		$this->dataViewMode = $dataViewMode;
	}
	



	/**
	* 
	*
	* @param int $productTypeId Identifier of the product type.
	* @return array|AttributeInProductType 
	* @deprecated deprecated since version 1.17
	*/
	public function getExtras($productTypeId)
	{
		$mozuClient = ProductTypeExtraClient::getExtrasClient($this->dataViewMode, $productTypeId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $productTypeId Identifier of the product type.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getExtrasAsync($productTypeId)
	{
		$mozuClient = ProductTypeExtraClient::getExtrasClient($this->dataViewMode, $productTypeId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $attributeFQN 
	* @param int $productTypeId Identifier of the product type whose extra is being retrieved.
	* @param string $responseFields 
	* @return AttributeInProductType 
	* @deprecated deprecated since version 1.17
	*/
	public function getExtra($productTypeId, $attributeFQN, $responseFields =  null)
	{
		$mozuClient = ProductTypeExtraClient::getExtraClient($this->dataViewMode, $productTypeId, $attributeFQN, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $attributeFQN 
	* @param int $productTypeId Identifier of the product type whose extra is being retrieved.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getExtraAsync($productTypeId, $attributeFQN, $responseFields =  null)
	{
		$mozuClient = ProductTypeExtraClient::getExtraClient($this->dataViewMode, $productTypeId, $attributeFQN, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $productTypeId Identifier of the product type.
	* @param string $responseFields 
	* @param AttributeInProductType $attributeInProductType The properties of the extra attribute definition for this product type assignment.
	* @return AttributeInProductType 
	* @deprecated deprecated since version 1.17
	*/
	public function addExtra($attributeInProductType, $productTypeId, $responseFields =  null)
	{
		$mozuClient = ProductTypeExtraClient::addExtraClient($this->dataViewMode, $attributeInProductType, $productTypeId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $productTypeId Identifier of the product type.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function addExtraAsync($attributeInProductType, $productTypeId, $responseFields =  null)
	{
		$mozuClient = ProductTypeExtraClient::addExtraClient($this->dataViewMode, $attributeInProductType, $productTypeId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $attributeFQN 
	* @param int $productTypeId Identifier of the product type.
	* @param string $responseFields 
	* @param AttributeInProductType $attributeInProductType The properties of the extra attribute definition to update for the product type.
	* @return AttributeInProductType 
	* @deprecated deprecated since version 1.17
	*/
	public function updateExtra($attributeInProductType, $productTypeId, $attributeFQN, $responseFields =  null)
	{
		$mozuClient = ProductTypeExtraClient::updateExtraClient($this->dataViewMode, $attributeInProductType, $productTypeId, $attributeFQN, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $attributeFQN 
	* @param int $productTypeId Identifier of the product type.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateExtraAsync($attributeInProductType, $productTypeId, $attributeFQN, $responseFields =  null)
	{
		$mozuClient = ProductTypeExtraClient::updateExtraClient($this->dataViewMode, $attributeInProductType, $productTypeId, $attributeFQN, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $attributeFQN 
	* @param int $productTypeId Identifier of the product type.
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteExtra($productTypeId, $attributeFQN)
	{
		$mozuClient = ProductTypeExtraClient::deleteExtraClient($this->dataViewMode, $productTypeId, $attributeFQN);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $attributeFQN 
	* @param int $productTypeId Identifier of the product type.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteExtraAsync($productTypeId, $attributeFQN)
	{
		$mozuClient = ProductTypeExtraClient::deleteExtraClient($this->dataViewMode, $productTypeId, $attributeFQN);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

