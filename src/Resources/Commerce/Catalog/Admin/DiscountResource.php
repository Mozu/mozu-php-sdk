<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Catalog\Admin;

use Mozu\Api\Clients\Commerce\Catalog\Admin\DiscountClient;
use Mozu\Api\ApiContext;

use Mozu\Api\Headers;

/**
* Define and manage discounts to apply to products, product categories, or orders. The discounts can be a specified amount off the price, percentage off the price, or for free shipping. Create a coupon code that shoppers can use to redeem the discount.
*/
class DiscountResource {

		private $apiContext;
		private $dataViewMode;
		public function __construct(ApiContext $apiContext, $dataViewMode) 
	{
		$this->apiContext = $apiContext;
		$this->dataViewMode = $dataViewMode;
	}
	



	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return DiscountCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getDiscounts($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = DiscountClient::getDiscountsClient($this->dataViewMode, $startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getDiscountsAsync($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = DiscountClient::getDiscountsClient($this->dataViewMode, $startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $discountId Unique identifier of the discount. System-supplied and read-only.
	* @param string $responseFields 
	* @return DiscountLocalizedContent 
	* @deprecated deprecated since version 1.17
	*/
	public function getDiscountContent($discountId, $responseFields =  null)
	{
		$mozuClient = DiscountClient::getDiscountContentClient($this->dataViewMode, $discountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $discountId Unique identifier of the discount. System-supplied and read-only.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getDiscountContentAsync($discountId, $responseFields =  null)
	{
		$mozuClient = DiscountClient::getDiscountContentClient($this->dataViewMode, $discountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $discountId Unique identifier of the discount. System-supplied and read-only.
	* @param string $responseFields 
	* @return Discount 
	* @deprecated deprecated since version 1.17
	*/
	public function getDiscount($discountId, $responseFields =  null)
	{
		$mozuClient = DiscountClient::getDiscountClient($this->dataViewMode, $discountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $discountId Unique identifier of the discount. System-supplied and read-only.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getDiscountAsync($discountId, $responseFields =  null)
	{
		$mozuClient = DiscountClient::getDiscountClient($this->dataViewMode, $discountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @return string 
	* @deprecated deprecated since version 1.17
	*/
	public function generateRandomCoupon($responseFields =  null)
	{
		$mozuClient = DiscountClient::generateRandomCouponClient($responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function generateRandomCouponAsync($responseFields =  null)
	{
		$mozuClient = DiscountClient::generateRandomCouponClient($responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param Discount $discount Properties of the discount to create. You must specify the discount name, amount type, start date, and target.
	* @return Discount 
	* @deprecated deprecated since version 1.17
	*/
	public function createDiscount($discount, $responseFields =  null)
	{
		$mozuClient = DiscountClient::createDiscountClient($discount, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createDiscountAsync($discount, $responseFields =  null)
	{
		$mozuClient = DiscountClient::createDiscountClient($discount, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $discountId Unique identifier of the discount. System-supplied and read-only.
	* @param string $responseFields 
	* @param DiscountLocalizedContent $content The discount content to update, including the discount name.
	* @return DiscountLocalizedContent 
	* @deprecated deprecated since version 1.17
	*/
	public function updateDiscountContent($content, $discountId, $responseFields =  null)
	{
		$mozuClient = DiscountClient::updateDiscountContentClient($content, $discountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $discountId Unique identifier of the discount. System-supplied and read-only.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateDiscountContentAsync($content, $discountId, $responseFields =  null)
	{
		$mozuClient = DiscountClient::updateDiscountContentClient($content, $discountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $discountId Unique identifier of the discount to update.
	* @param string $responseFields 
	* @param Discount $discount Properties of the discount to update.
	* @return Discount 
	* @deprecated deprecated since version 1.17
	*/
	public function updateDiscount($discount, $discountId, $responseFields =  null)
	{
		$mozuClient = DiscountClient::updateDiscountClient($discount, $discountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $discountId Unique identifier of the discount to update.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateDiscountAsync($discount, $discountId, $responseFields =  null)
	{
		$mozuClient = DiscountClient::updateDiscountClient($discount, $discountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $discountId Unique identifier of the discount. System-supplied and read-only.
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteDiscount($discountId)
	{
		$mozuClient = DiscountClient::deleteDiscountClient($discountId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $discountId Unique identifier of the discount. System-supplied and read-only.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteDiscountAsync($discountId)
	{
		$mozuClient = DiscountClient::deleteDiscountClient($discountId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

