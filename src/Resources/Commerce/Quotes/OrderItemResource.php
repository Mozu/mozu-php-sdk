<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Quotes;

use Mozu\Api\Clients\Commerce\Quotes\OrderItemClient;
use Mozu\Api\ApiContext;


/**
* 
*/
class OrderItemResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $quoteId 
	* @param string $quoteItemId 
	* @param string $responseFields 
	* @return OrderItem 
	* @deprecated deprecated since version 1.17
	*/
	public function getQuoteItem($quoteId, $quoteItemId, $responseFields =  null)
	{
		$mozuClient = OrderItemClient::getQuoteItemClient($quoteId, $quoteItemId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $quoteId 
	* @param string $quoteItemId 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getQuoteItemAsync($quoteId, $quoteItemId, $responseFields =  null)
	{
		$mozuClient = OrderItemClient::getQuoteItemClient($quoteId, $quoteItemId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $quoteId 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return QuoteItemCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getQuoteItems($quoteId, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = OrderItemClient::getQuoteItemsClient($quoteId, $startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $quoteId 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getQuoteItemsAsync($quoteId, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = OrderItemClient::getQuoteItemsClient($quoteId, $startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $customerAccountId 
	* @param string $filter 
	* @param int $pageSize 
	* @param string $quoteName 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return QuoteItemCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getQuoteItemsByQuoteName($customerAccountId, $quoteName, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = OrderItemClient::getQuoteItemsByQuoteNameClient($customerAccountId, $quoteName, $startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $customerAccountId 
	* @param string $filter 
	* @param int $pageSize 
	* @param string $quoteName 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getQuoteItemsByQuoteNameAsync($customerAccountId, $quoteName, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = OrderItemClient::getQuoteItemsByQuoteNameClient($customerAccountId, $quoteName, $startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $quoteId 
	* @param string $responseFields 
	* @param OrderItem $quoteItem 
	* @return Quote 
	* @deprecated deprecated since version 1.17
	*/
	public function addItemToQuote($quoteItem, $quoteId, $responseFields =  null)
	{
		$mozuClient = OrderItemClient::addItemToQuoteClient($quoteItem, $quoteId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $quoteId 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function addItemToQuoteAsync($quoteItem, $quoteId, $responseFields =  null)
	{
		$mozuClient = OrderItemClient::addItemToQuoteClient($quoteItem, $quoteId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $quoteId 
	* @param string $quoteItemId 
	* @param string $responseFields 
	* @param OrderItem $quoteItem 
	* @return Quote 
	* @deprecated deprecated since version 1.17
	*/
	public function updateQuoteItem($quoteItem, $quoteId, $quoteItemId, $responseFields =  null)
	{
		$mozuClient = OrderItemClient::updateQuoteItemClient($quoteItem, $quoteId, $quoteItemId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $quoteId 
	* @param string $quoteItemId 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateQuoteItemAsync($quoteItem, $quoteId, $quoteItemId, $responseFields =  null)
	{
		$mozuClient = OrderItemClient::updateQuoteItemClient($quoteItem, $quoteId, $quoteItemId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $quoteId 
	* @param string $quoteItemId 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteQuoteItem($quoteId, $quoteItemId)
	{
		$mozuClient = OrderItemClient::deleteQuoteItemClient($quoteId, $quoteItemId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $quoteId 
	* @param string $quoteItemId 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteQuoteItemAsync($quoteId, $quoteItemId)
	{
		$mozuClient = OrderItemClient::deleteQuoteItemClient($quoteId, $quoteItemId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

