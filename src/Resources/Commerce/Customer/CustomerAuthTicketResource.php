<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Customer;

use Mozu\Api\Clients\Commerce\Customer\CustomerAuthTicketClient;
use Mozu\Api\ApiContext;


/**
* Use the Customer Authentication Tickets resource to generate and refresh authentication tickets for customer accounts.
*/
class CustomerAuthTicketResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $responseFields 
	* @return CustomerAuthTicket 
	* @deprecated deprecated since version 1.17
	*/
	public function createAnonymousShopperAuthTicket($responseFields =  null)
	{
		$mozuClient = CustomerAuthTicketClient::createAnonymousShopperAuthTicketClient($responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createAnonymousShopperAuthTicketAsync($responseFields =  null)
	{
		$mozuClient = CustomerAuthTicketClient::createAnonymousShopperAuthTicketClient($responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param CustomerUserAuthInfo $userAuthInfo The authentication information required to generate an authetication ticket for a user, which consists of a user name and password.
	* @return CustomerAuthTicket 
	* @deprecated deprecated since version 1.17
	*/
	public function createUserAuthTicket($userAuthInfo, $responseFields =  null)
	{
		$mozuClient = CustomerAuthTicketClient::createUserAuthTicketClient($userAuthInfo, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createUserAuthTicketAsync($userAuthInfo, $responseFields =  null)
	{
		$mozuClient = CustomerAuthTicketClient::createUserAuthTicketClient($userAuthInfo, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $refreshToken The refresh token string required to refresh a user's authentication ticket.
	* @param string $responseFields 
	* @return CustomerAuthTicket 
	* @deprecated deprecated since version 1.17
	*/
	public function refreshUserAuthTicket($refreshToken, $responseFields =  null)
	{
		$mozuClient = CustomerAuthTicketClient::refreshUserAuthTicketClient($refreshToken, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $refreshToken The refresh token string required to refresh a user's authentication ticket.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function refreshUserAuthTicketAsync($refreshToken, $responseFields =  null)
	{
		$mozuClient = CustomerAuthTicketClient::refreshUserAuthTicketClient($refreshToken, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

