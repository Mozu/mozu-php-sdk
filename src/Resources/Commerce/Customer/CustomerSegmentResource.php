<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Customer;

use Mozu\Api\Clients\Commerce\Customer\CustomerSegmentClient;
use Mozu\Api\ApiContext;


/**
* Use the Customer Segments resource to manage the segments that enable a client to manage groups of customers and target discounts for these segments. After a customer segment is defined, you can associate any number of customer accounts with it.
*/
class CustomerSegmentResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return CustomerSegmentCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getSegments($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = CustomerSegmentClient::getSegmentsClient($startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getSegmentsAsync($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = CustomerSegmentClient::getSegmentsClient($startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $id Unique identifier of the customer segment to retrieve.
	* @param string $responseFields 
	* @return CustomerSegment 
	* @deprecated deprecated since version 1.17
	*/
	public function getSegment($id, $responseFields =  null)
	{
		$mozuClient = CustomerSegmentClient::getSegmentClient($id, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $id Unique identifier of the customer segment to retrieve.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getSegmentAsync($id, $responseFields =  null)
	{
		$mozuClient = CustomerSegmentClient::getSegmentClient($id, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param CustomerSegment $segment Properties of the customer segment to add.
	* @return CustomerSegment 
	* @deprecated deprecated since version 1.17
	*/
	public function addSegment($segment, $responseFields =  null)
	{
		$mozuClient = CustomerSegmentClient::addSegmentClient($segment, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function addSegmentAsync($segment, $responseFields =  null)
	{
		$mozuClient = CustomerSegmentClient::addSegmentClient($segment, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $id Unique identifier of the customer segment for which to add the associated customer accounts.
	* @param array|int $accountIds List of customer account IDs to add to the customer segment specified in the request.
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function addSegmentAccounts($accountIds, $id)
	{
		$mozuClient = CustomerSegmentClient::addSegmentAccountsClient($accountIds, $id);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $id Unique identifier of the customer segment for which to add the associated customer accounts.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function addSegmentAccountsAsync($accountIds, $id)
	{
		$mozuClient = CustomerSegmentClient::addSegmentAccountsClient($accountIds, $id);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $id Unique identifier of the customer segment.
	* @param string $responseFields 
	* @param CustomerSegment $segment Properties of the customer segment to update.
	* @return CustomerSegment 
	* @deprecated deprecated since version 1.17
	*/
	public function updateSegment($segment, $id, $responseFields =  null)
	{
		$mozuClient = CustomerSegmentClient::updateSegmentClient($segment, $id, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $id Unique identifier of the customer segment.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateSegmentAsync($segment, $id, $responseFields =  null)
	{
		$mozuClient = CustomerSegmentClient::updateSegmentClient($segment, $id, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $id Unique identifier of the customer segment to delete.
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteSegment($id)
	{
		$mozuClient = CustomerSegmentClient::deleteSegmentClient($id);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $id Unique identifier of the customer segment to delete.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteSegmentAsync($id)
	{
		$mozuClient = CustomerSegmentClient::deleteSegmentClient($id);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param int $id 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function removeSegmentAccount($id, $accountId)
	{
		$mozuClient = CustomerSegmentClient::removeSegmentAccountClient($id, $accountId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $accountId 
	* @param int $id 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function removeSegmentAccountAsync($id, $accountId)
	{
		$mozuClient = CustomerSegmentClient::removeSegmentAccountClient($id, $accountId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

