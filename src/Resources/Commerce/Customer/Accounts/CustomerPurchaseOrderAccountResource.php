<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Customer\Accounts;

use Mozu\Api\Clients\Commerce\Customer\Accounts\CustomerPurchaseOrderAccountClient;
use Mozu\Api\ApiContext;


/**
* 
*/
class CustomerPurchaseOrderAccountResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param int $accountId 
	* @param string $responseFields 
	* @return CustomerPurchaseOrderAccount 
	* @deprecated deprecated since version 1.17
	*/
	public function getCustomerPurchaseOrderAccount($accountId, $responseFields =  null)
	{
		$mozuClient = CustomerPurchaseOrderAccountClient::getCustomerPurchaseOrderAccountClient($accountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $accountId 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getCustomerPurchaseOrderAccountAsync($accountId, $responseFields =  null)
	{
		$mozuClient = CustomerPurchaseOrderAccountClient::getCustomerPurchaseOrderAccountClient($accountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return PurchaseOrderTransactionCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getCustomerPurchaseOrderTransactions($accountId, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = CustomerPurchaseOrderAccountClient::getCustomerPurchaseOrderTransactionsClient($accountId, $startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $accountId 
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getCustomerPurchaseOrderTransactionsAsync($accountId, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = CustomerPurchaseOrderAccountClient::getCustomerPurchaseOrderTransactionsClient($accountId, $startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param string $responseFields 
	* @param CustomerPurchaseOrderAccount $customerPurchaseOrderAccount 
	* @return CustomerPurchaseOrderAccount 
	* @deprecated deprecated since version 1.17
	*/
	public function createCustomerPurchaseOrderAccount($customerPurchaseOrderAccount, $accountId, $responseFields =  null)
	{
		$mozuClient = CustomerPurchaseOrderAccountClient::createCustomerPurchaseOrderAccountClient($customerPurchaseOrderAccount, $accountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $accountId 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createCustomerPurchaseOrderAccountAsync($customerPurchaseOrderAccount, $accountId, $responseFields =  null)
	{
		$mozuClient = CustomerPurchaseOrderAccountClient::createCustomerPurchaseOrderAccountClient($customerPurchaseOrderAccount, $accountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param string $responseFields 
	* @param PurchaseOrderTransaction $purchaseOrderTransaction 
	* @return PurchaseOrderTransaction 
	* @deprecated deprecated since version 1.17
	*/
	public function createPurchaseOrderTransaction($purchaseOrderTransaction, $accountId, $responseFields =  null)
	{
		$mozuClient = CustomerPurchaseOrderAccountClient::createPurchaseOrderTransactionClient($purchaseOrderTransaction, $accountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $accountId 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createPurchaseOrderTransactionAsync($purchaseOrderTransaction, $accountId, $responseFields =  null)
	{
		$mozuClient = CustomerPurchaseOrderAccountClient::createPurchaseOrderTransactionClient($purchaseOrderTransaction, $accountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @param string $responseFields 
	* @param CustomerPurchaseOrderAccount $customerPurchaseOrderAccount 
	* @return CustomerPurchaseOrderAccount 
	* @deprecated deprecated since version 1.17
	*/
	public function updateCustomerPurchaseOrderAccount($customerPurchaseOrderAccount, $accountId, $responseFields =  null)
	{
		$mozuClient = CustomerPurchaseOrderAccountClient::updateCustomerPurchaseOrderAccountClient($customerPurchaseOrderAccount, $accountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $accountId 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateCustomerPurchaseOrderAccountAsync($customerPurchaseOrderAccount, $accountId, $responseFields =  null)
	{
		$mozuClient = CustomerPurchaseOrderAccountClient::updateCustomerPurchaseOrderAccountClient($customerPurchaseOrderAccount, $accountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $accountId 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteCustomerPurchaseOrderAccount($accountId)
	{
		$mozuClient = CustomerPurchaseOrderAccountClient::deleteCustomerPurchaseOrderAccountClient($accountId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $accountId 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteCustomerPurchaseOrderAccountAsync($accountId)
	{
		$mozuClient = CustomerPurchaseOrderAccountClient::deleteCustomerPurchaseOrderAccountClient($accountId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

