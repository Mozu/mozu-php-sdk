<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce;

use Mozu\Api\Clients\Commerce\WishlistClient;
use Mozu\Api\ApiContext;


/**
* Use the Wish Lists resource to manage the shopper wish lists of products associated with a customer account. Although customer accounts are managed at the tenant level, the system stores shopper wish lists at the site level. This enables the same customer to have wish lists for each of a merchant's sites. Use the Wish List Items resource to manage items in a wish list.
*/
class WishlistResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $q A list of search terms to use in the query when searching across wish list name. Separate multiple search terms with a space character.
	* @param int $qLimit The maximum number of search results to return in the response. You can limit any range between 1-100.
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return WishlistCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getWishlists($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $q =  null, $qLimit =  null, $responseFields =  null)
	{
		$mozuClient = WishlistClient::getWishlistsClient($startIndex, $pageSize, $sortBy, $filter, $q, $qLimit, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $q A list of search terms to use in the query when searching across wish list name. Separate multiple search terms with a space character.
	* @param int $qLimit The maximum number of search results to return in the response. You can limit any range between 1-100.
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getWishlistsAsync($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $q =  null, $qLimit =  null, $responseFields =  null)
	{
		$mozuClient = WishlistClient::getWishlistsClient($startIndex, $pageSize, $sortBy, $filter, $q, $qLimit, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param string $wishlistId Unique identifier of the shopper wish list to retrieve.
	* @return Wishlist 
	* @deprecated deprecated since version 1.17
	*/
	public function getWishlist($wishlistId, $responseFields =  null)
	{
		$mozuClient = WishlistClient::getWishlistClient($wishlistId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @param string $wishlistId Unique identifier of the shopper wish list to retrieve.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getWishlistAsync($wishlistId, $responseFields =  null)
	{
		$mozuClient = WishlistClient::getWishlistClient($wishlistId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $customerAccountId The unique identifier of the customer account for which to retrieve wish lists.
	* @param string $responseFields 
	* @param string $wishlistName The name of the wish list to retrieve.
	* @return Wishlist 
	* @deprecated deprecated since version 1.17
	*/
	public function getWishlistByName($customerAccountId, $wishlistName, $responseFields =  null)
	{
		$mozuClient = WishlistClient::getWishlistByNameClient($customerAccountId, $wishlistName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $customerAccountId The unique identifier of the customer account for which to retrieve wish lists.
	* @param string $responseFields 
	* @param string $wishlistName The name of the wish list to retrieve.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getWishlistByNameAsync($customerAccountId, $wishlistName, $responseFields =  null)
	{
		$mozuClient = WishlistClient::getWishlistByNameClient($customerAccountId, $wishlistName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param Wishlist $wishlist Properties of the wish list to create.
	* @return Wishlist 
	* @deprecated deprecated since version 1.17
	*/
	public function createWishlist($wishlist, $responseFields =  null)
	{
		$mozuClient = WishlistClient::createWishlistClient($wishlist, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createWishlistAsync($wishlist, $responseFields =  null)
	{
		$mozuClient = WishlistClient::createWishlistClient($wishlist, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param string $wishlistId Unique identifier of the shopper wish list to update.
	* @param Wishlist $wishlist Properties of the shopper wish list to update.
	* @return Wishlist 
	* @deprecated deprecated since version 1.17
	*/
	public function updateWishlist($wishlist, $wishlistId, $responseFields =  null)
	{
		$mozuClient = WishlistClient::updateWishlistClient($wishlist, $wishlistId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @param string $wishlistId Unique identifier of the shopper wish list to update.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateWishlistAsync($wishlist, $wishlistId, $responseFields =  null)
	{
		$mozuClient = WishlistClient::updateWishlistClient($wishlist, $wishlistId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $wishlistId Unique identifier of the wish list to delete.
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteWishlist($wishlistId)
	{
		$mozuClient = WishlistClient::deleteWishlistClient($wishlistId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $wishlistId Unique identifier of the wish list to delete.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteWishlistAsync($wishlistId)
	{
		$mozuClient = WishlistClient::deleteWishlistClient($wishlistId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

