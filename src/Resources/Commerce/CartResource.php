<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce;

use Mozu\Api\Clients\Commerce\CartClient;
use Mozu\Api\ApiContext;


/**
* Use the Carts resource to manage storefront shopping carts as items are added and removed. Each time a shopper's cart is modified, the Carts resource updates the estimated total with any applicable discounts.
*/
class CartResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $cartId Identifier of the cart to retrieve.
	* @param string $responseFields 
	* @return Cart 
	* @deprecated deprecated since version 1.17
	*/
	public function getCart($cartId, $responseFields =  null)
	{
		$mozuClient = CartClient::getCartClient($cartId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $cartId Identifier of the cart to retrieve.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getCartAsync($cartId, $responseFields =  null)
	{
		$mozuClient = CartClient::getCartClient($cartId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @return Cart 
	* @deprecated deprecated since version 1.17
	*/
	public function getOrCreateCart($responseFields =  null)
	{
		$mozuClient = CartClient::getOrCreateCartClient($responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getOrCreateCartAsync($responseFields =  null)
	{
		$mozuClient = CartClient::getOrCreateCartClient($responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @return CartSummary 
	* @deprecated deprecated since version 1.17
	*/
	public function getCartSummary($responseFields =  null)
	{
		$mozuClient = CartClient::getCartSummaryClient($responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getCartSummaryAsync($responseFields =  null)
	{
		$mozuClient = CartClient::getCartSummaryClient($responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param string $userId Unique identifier of the user whose cart details you want to retrieve.
	* @return CartSummary 
	* @deprecated deprecated since version 1.17
	*/
	public function getUserCartSummary($userId, $responseFields =  null)
	{
		$mozuClient = CartClient::getUserCartSummaryClient($userId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @param string $userId Unique identifier of the user whose cart details you want to retrieve.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getUserCartSummaryAsync($userId, $responseFields =  null)
	{
		$mozuClient = CartClient::getUserCartSummaryClient($userId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param string $userId Unique identifier of the user whose cart you want to retrieve.
	* @return Cart 
	* @deprecated deprecated since version 1.17
	*/
	public function getUserCart($userId, $responseFields =  null)
	{
		$mozuClient = CartClient::getUserCartClient($userId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @param string $userId Unique identifier of the user whose cart you want to retrieve.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getUserCartAsync($userId, $responseFields =  null)
	{
		$mozuClient = CartClient::getUserCartClient($userId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $cartId 
	* @param int $discountId 
	* @param string $responseFields 
	* @return Cart 
	* @deprecated deprecated since version 1.17
	*/
	public function rejectSuggestedDiscount($cartId, $discountId, $responseFields =  null)
	{
		$mozuClient = CartClient::rejectSuggestedDiscountClient($cartId, $discountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $cartId 
	* @param int $discountId 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function rejectSuggestedDiscountAsync($cartId, $discountId, $responseFields =  null)
	{
		$mozuClient = CartClient::rejectSuggestedDiscountClient($cartId, $discountId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param Cart $cart All of the properties of the cart to update. The product code is required.
	* @return Cart 
	* @deprecated deprecated since version 1.17
	*/
	public function updateCart($cart, $responseFields =  null)
	{
		$mozuClient = CartClient::updateCartClient($cart, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateCartAsync($cart, $responseFields =  null)
	{
		$mozuClient = CartClient::updateCartClient($cart, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $cartId Identifier of the cart to delete.
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteCart($cartId)
	{
		$mozuClient = CartClient::deleteCartClient($cartId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $cartId Identifier of the cart to delete.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteCartAsync($cartId)
	{
		$mozuClient = CartClient::deleteCartClient($cartId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteCurrentCart()
	{
		$mozuClient = CartClient::deleteCurrentCartClient();
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteCurrentCartAsync()
	{
		$mozuClient = CartClient::deleteCurrentCartClient();
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

