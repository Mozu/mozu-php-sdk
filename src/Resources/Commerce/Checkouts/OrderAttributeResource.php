<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Checkouts;

use Mozu\Api\Clients\Commerce\Checkouts\OrderAttributeClient;
use Mozu\Api\ApiContext;


/**
* 
*/
class OrderAttributeResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $checkoutId 
	* @return array|OrderAttribute 
	* @deprecated deprecated since version 1.17
	*/
	public function getCheckoutAttributes($checkoutId)
	{
		$mozuClient = OrderAttributeClient::getCheckoutAttributesClient($checkoutId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $checkoutId 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getCheckoutAttributesAsync($checkoutId)
	{
		$mozuClient = OrderAttributeClient::getCheckoutAttributesClient($checkoutId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $checkoutId 
	* @param array|OrderAttribute $checkoutAttributes 
	* @return array|OrderAttribute 
	* @deprecated deprecated since version 1.17
	*/
	public function createCheckoutAttributes($checkoutAttributes, $checkoutId)
	{
		$mozuClient = OrderAttributeClient::createCheckoutAttributesClient($checkoutAttributes, $checkoutId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $checkoutId 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createCheckoutAttributesAsync($checkoutAttributes, $checkoutId)
	{
		$mozuClient = OrderAttributeClient::createCheckoutAttributesClient($checkoutAttributes, $checkoutId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $checkoutId 
	* @param bool $removeMissing 
	* @param array|OrderAttribute $checkoutAttributes 
	* @return array|OrderAttribute 
	* @deprecated deprecated since version 1.17
	*/
	public function updateCheckoutAttribute($checkoutAttributes, $checkoutId, $removeMissing =  null)
	{
		$mozuClient = OrderAttributeClient::updateCheckoutAttributeClient($checkoutAttributes, $checkoutId, $removeMissing);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $checkoutId 
	* @param bool $removeMissing 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateCheckoutAttributeAsync($checkoutAttributes, $checkoutId, $removeMissing =  null)
	{
		$mozuClient = OrderAttributeClient::updateCheckoutAttributeClient($checkoutAttributes, $checkoutId, $removeMissing);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

