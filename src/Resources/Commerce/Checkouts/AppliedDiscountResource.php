<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Checkouts;

use Mozu\Api\Clients\Commerce\Checkouts\AppliedDiscountClient;
use Mozu\Api\ApiContext;


/**
* 
*/
class AppliedDiscountResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $checkoutId 
	* @param string $couponCode 
	* @param string $responseFields 
	* @return Checkout 
	* @deprecated deprecated since version 1.17
	*/
	public function applyCoupon($checkoutId, $couponCode, $responseFields =  null)
	{
		$mozuClient = AppliedDiscountClient::applyCouponClient($checkoutId, $couponCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $checkoutId 
	* @param string $couponCode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function applyCouponAsync($checkoutId, $couponCode, $responseFields =  null)
	{
		$mozuClient = AppliedDiscountClient::applyCouponClient($checkoutId, $couponCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $checkoutId 
	* @return Checkout 
	* @deprecated deprecated since version 1.17
	*/
	public function removeCoupons($checkoutId)
	{
		$mozuClient = AppliedDiscountClient::removeCouponsClient($checkoutId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $checkoutId 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function removeCouponsAsync($checkoutId)
	{
		$mozuClient = AppliedDiscountClient::removeCouponsClient($checkoutId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $checkoutId 
	* @param string $couponCode 
	* @return Checkout 
	* @deprecated deprecated since version 1.17
	*/
	public function removeCoupon($checkoutId, $couponCode)
	{
		$mozuClient = AppliedDiscountClient::removeCouponClient($checkoutId, $couponCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $checkoutId 
	* @param string $couponCode 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function removeCouponAsync($checkoutId, $couponCode)
	{
		$mozuClient = AppliedDiscountClient::removeCouponClient($checkoutId, $couponCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

