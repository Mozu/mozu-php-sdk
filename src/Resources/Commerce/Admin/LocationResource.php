<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Admin;

use Mozu\Api\Clients\Commerce\Admin\LocationClient;
use Mozu\Api\ApiContext;


/**
* Use the Locations resource to manage each physical location associated with a tenant. Locations enable tenants to associate a physical address with product inventory, provide a store finder for in-store pickup, or both. Locations that support inventory can use both direct ship and in-store pickup fulfillment types.
*/
class LocationResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return LocationCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getLocations($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = LocationClient::getLocationsClient($startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getLocationsAsync($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = LocationClient::getLocationsClient($startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $locationCode The merchant-defined code of the location to retrieve.
	* @param string $responseFields 
	* @return Location 
	* @deprecated deprecated since version 1.17
	*/
	public function getLocation($locationCode, $responseFields =  null)
	{
		$mozuClient = LocationClient::getLocationClient($locationCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $locationCode The merchant-defined code of the location to retrieve.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getLocationAsync($locationCode, $responseFields =  null)
	{
		$mozuClient = LocationClient::getLocationClient($locationCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param Location $location Properties of the location to create.
	* @return Location 
	* @deprecated deprecated since version 1.17
	*/
	public function addLocation($location, $responseFields =  null)
	{
		$mozuClient = LocationClient::addLocationClient($location, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function addLocationAsync($location, $responseFields =  null)
	{
		$mozuClient = LocationClient::addLocationClient($location, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $locationCode The merchant-defined code associated with the location to update.
	* @param string $responseFields 
	* @param Location $location Properties of the location to update.
	* @return Location 
	* @deprecated deprecated since version 1.17
	*/
	public function updateLocation($location, $locationCode, $responseFields =  null)
	{
		$mozuClient = LocationClient::updateLocationClient($location, $locationCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $locationCode The merchant-defined code associated with the location to update.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateLocationAsync($location, $locationCode, $responseFields =  null)
	{
		$mozuClient = LocationClient::updateLocationClient($location, $locationCode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $locationCode The merchant-defined code of the location to delete.
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteLocation($locationCode)
	{
		$mozuClient = LocationClient::deleteLocationClient($locationCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $locationCode The merchant-defined code of the location to delete.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteLocationAsync($locationCode)
	{
		$mozuClient = LocationClient::deleteLocationClient($locationCode);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

