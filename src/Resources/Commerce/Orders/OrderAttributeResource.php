<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Orders;

use Mozu\Api\Clients\Commerce\Orders\OrderAttributeClient;
use Mozu\Api\ApiContext;


/**
* Use the Order Attributes resource to define how an order attribute definition applies to a specific order.
*/
class OrderAttributeResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $orderId Unique identifier of the order for which to retrieve a list of defined attributes.
	* @return array|OrderAttribute 
	* @deprecated deprecated since version 1.17
	*/
	public function getOrderAttributes($orderId)
	{
		$mozuClient = OrderAttributeClient::getOrderAttributesClient($orderId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $orderId Unique identifier of the order for which to retrieve a list of defined attributes.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getOrderAttributesAsync($orderId)
	{
		$mozuClient = OrderAttributeClient::getOrderAttributesClient($orderId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $orderId Unique identifier of the order for which to assign the attributes.
	* @param array|OrderAttribute $orderAttributes The list of attributes to associate with the order, and the properties of each attribute to define for the order.
	* @return array|OrderAttribute 
	* @deprecated deprecated since version 1.17
	*/
	public function createOrderAttributes($orderAttributes, $orderId)
	{
		$mozuClient = OrderAttributeClient::createOrderAttributesClient($orderAttributes, $orderId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $orderId Unique identifier of the order for which to assign the attributes.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createOrderAttributesAsync($orderAttributes, $orderId)
	{
		$mozuClient = OrderAttributeClient::createOrderAttributesClient($orderAttributes, $orderId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $orderId Identifier of the order for which to update attributes.
	* @param bool $removeMissing If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.
	* @param array|OrderAttribute $orderAttributes List of order attributes to update, including the properties of each defined attribute in the list.
	* @return array|OrderAttribute 
	* @deprecated deprecated since version 1.17
	*/
	public function updateOrderAttributes($orderAttributes, $orderId, $removeMissing =  null)
	{
		$mozuClient = OrderAttributeClient::updateOrderAttributesClient($orderAttributes, $orderId, $removeMissing);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $orderId Identifier of the order for which to update attributes.
	* @param bool $removeMissing If true, the operation removes missing properties so that the updated order attributes will not show properties with a null value.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateOrderAttributesAsync($orderAttributes, $orderId, $removeMissing =  null)
	{
		$mozuClient = OrderAttributeClient::updateOrderAttributesClient($orderAttributes, $orderId, $removeMissing);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

