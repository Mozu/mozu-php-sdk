<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Orders;

use Mozu\Api\Clients\Commerce\Orders\BillingInfoClient;
use Mozu\Api\ApiContext;


/**
* Use the Billing Info subresource to manage the billing information stored for an order.
*/
class BillingInfoResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param bool $draft If true, retrieve the draft version of the order billing information, which might include uncommitted changes.
	* @param string $orderId Unique identifier of the order.
	* @param string $responseFields 
	* @return BillingInfo 
	* @deprecated deprecated since version 1.17
	*/
	public function getBillingInfo($orderId, $draft =  null, $responseFields =  null)
	{
		$mozuClient = BillingInfoClient::getBillingInfoClient($orderId, $draft, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param bool $draft If true, retrieve the draft version of the order billing information, which might include uncommitted changes.
	* @param string $orderId Unique identifier of the order.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getBillingInfoAsync($orderId, $draft =  null, $responseFields =  null)
	{
		$mozuClient = BillingInfoClient::getBillingInfoClient($orderId, $draft, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $orderId Unique identifier of the order.
	* @param string $responseFields 
	* @param string $updateMode Specifies whether to set the billing information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version 
	* @param BillingInfo $billingInfo The properties of the order billing information to update.
	* @return BillingInfo 
	* @deprecated deprecated since version 1.17
	*/
	public function setBillingInfo($billingInfo, $orderId, $updateMode =  null, $version =  null, $responseFields =  null)
	{
		$mozuClient = BillingInfoClient::setBillingInfoClient($billingInfo, $orderId, $updateMode, $version, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $orderId Unique identifier of the order.
	* @param string $responseFields 
	* @param string $updateMode Specifies whether to set the billing information by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function setBillingInfoAsync($billingInfo, $orderId, $updateMode =  null, $version =  null, $responseFields =  null)
	{
		$mozuClient = BillingInfoClient::setBillingInfoClient($billingInfo, $orderId, $updateMode, $version, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

