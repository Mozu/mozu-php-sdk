<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Orders;

use Mozu\Api\Clients\Commerce\Orders\ShipmentClient;
use Mozu\Api\ApiContext;


/**
* Use the shipments resource to manage shipments of collections of packages for an order.
*/
class ShipmentResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $orderId Unique identifier of the order associated with the shipment to retrieve.
	* @param string $responseFields 
	* @param string $shipmentId Unique identifier of the shipment to retrieve.
	* @return Shipment 
	* @deprecated deprecated since version 1.17
	*/
	public function getShipment($orderId, $shipmentId, $responseFields =  null)
	{
		$mozuClient = ShipmentClient::getShipmentClient($orderId, $shipmentId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $orderId Unique identifier of the order associated with the shipment to retrieve.
	* @param string $responseFields 
	* @param string $shipmentId Unique identifier of the shipment to retrieve.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getShipmentAsync($orderId, $shipmentId, $responseFields =  null)
	{
		$mozuClient = ShipmentClient::getShipmentClient($orderId, $shipmentId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param bool $draft 
	* @param string $orderId Unique identifier of the order for the available shipment methods being retrieved.
	* @return array|ShippingRate 
	* @deprecated deprecated since version 1.17
	*/
	public function getAvailableShipmentMethods($orderId, $draft =  null)
	{
		$mozuClient = ShipmentClient::getAvailableShipmentMethodsClient($orderId, $draft);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param bool $draft 
	* @param string $orderId Unique identifier of the order for the available shipment methods being retrieved.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getAvailableShipmentMethodsAsync($orderId, $draft =  null)
	{
		$mozuClient = ShipmentClient::getAvailableShipmentMethodsClient($orderId, $draft);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $orderId Unique identifier of the order for this shipment.
	* @param array|string $packageIds List of unique identifiers for each package associated with this shipment. Not all packages must belong to the same shipment.
	* @return array|Package 
	* @deprecated deprecated since version 1.17
	*/
	public function createPackageShipments($packageIds, $orderId)
	{
		$mozuClient = ShipmentClient::createPackageShipmentsClient($packageIds, $orderId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $orderId Unique identifier of the order for this shipment.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createPackageShipmentsAsync($packageIds, $orderId)
	{
		$mozuClient = ShipmentClient::createPackageShipmentsClient($packageIds, $orderId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $orderId 
	* @param string $responseFields 
	* @param int $shipmentNumber 
	* @param ShipmentAdjustment $shipmentAdjustment 
	* @return Shipment 
	* @deprecated deprecated since version 1.17
	*/
	public function updateShipmentAdjustments($shipmentAdjustment, $orderId, $shipmentNumber, $responseFields =  null)
	{
		$mozuClient = ShipmentClient::updateShipmentAdjustmentsClient($shipmentAdjustment, $orderId, $shipmentNumber, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $orderId 
	* @param string $responseFields 
	* @param int $shipmentNumber 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateShipmentAdjustmentsAsync($shipmentAdjustment, $orderId, $shipmentNumber, $responseFields =  null)
	{
		$mozuClient = ShipmentClient::updateShipmentAdjustmentsClient($shipmentAdjustment, $orderId, $shipmentNumber, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $itemId 
	* @param string $responseFields 
	* @param int $shipmentNumber 
	* @param ShipmentItemAdjustment $shipmentItemAdjustment 
	* @return Shipment 
	* @deprecated deprecated since version 1.17
	*/
	public function updateShipmentItem($shipmentItemAdjustment, $shipmentNumber, $itemId, $responseFields =  null)
	{
		$mozuClient = ShipmentClient::updateShipmentItemClient($shipmentItemAdjustment, $shipmentNumber, $itemId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $itemId 
	* @param string $responseFields 
	* @param int $shipmentNumber 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateShipmentItemAsync($shipmentItemAdjustment, $shipmentNumber, $itemId, $responseFields =  null)
	{
		$mozuClient = ShipmentClient::updateShipmentItemClient($shipmentItemAdjustment, $shipmentNumber, $itemId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param int $shipmentNumber 
	* @param RepriceShipmentObject $repriceShipment 
	* @return Shipment 
	* @deprecated deprecated since version 1.17
	*/
	public function repriceShipment($repriceShipment, $shipmentNumber, $responseFields =  null)
	{
		$mozuClient = ShipmentClient::repriceShipmentClient($repriceShipment, $shipmentNumber, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @param int $shipmentNumber 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function repriceShipmentAsync($repriceShipment, $shipmentNumber, $responseFields =  null)
	{
		$mozuClient = ShipmentClient::repriceShipmentClient($repriceShipment, $shipmentNumber, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param SplitShipmentsObject $splitShipments 
	* @return array|Shipment 
	* @deprecated deprecated since version 1.17
	*/
	public function splitShipments($splitShipments)
	{
		$mozuClient = ShipmentClient::splitShipmentsClient($splitShipments);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function splitShipmentsAsync($splitShipments)
	{
		$mozuClient = ShipmentClient::splitShipmentsClient($splitShipments);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $orderId Unique identifier of the order to cancel shipment.
	* @param string $shipmentId Unique identifier of the shipment to cancel.
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteShipment($orderId, $shipmentId)
	{
		$mozuClient = ShipmentClient::deleteShipmentClient($orderId, $shipmentId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $orderId Unique identifier of the order to cancel shipment.
	* @param string $shipmentId Unique identifier of the shipment to cancel.
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteShipmentAsync($orderId, $shipmentId)
	{
		$mozuClient = ShipmentClient::deleteShipmentClient($orderId, $shipmentId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

