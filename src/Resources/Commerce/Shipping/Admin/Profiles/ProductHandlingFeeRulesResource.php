<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Shipping\Admin\Profiles;

use Mozu\Api\Clients\Commerce\Shipping\Admin\Profiles\ProductHandlingFeeRulesClient;
use Mozu\Api\ApiContext;

use Mozu\Api\Headers;

/**
* 
*/
class ProductHandlingFeeRulesResource {

		private $apiContext;
		private $dataViewMode;
		public function __construct(ApiContext $apiContext, $dataViewMode) 
	{
		$this->apiContext = $apiContext;
		$this->dataViewMode = $dataViewMode;
	}
	



	/**
	* 
	*
	* @param string $id 
	* @param string $profilecode 
	* @param string $responseFields 
	* @return HandlingFeeRule 
	* @deprecated deprecated since version 1.17
	*/
	public function getProductHandlingFeeRule($profilecode, $id, $responseFields =  null)
	{
		$mozuClient = ProductHandlingFeeRulesClient::getProductHandlingFeeRuleClient($this->dataViewMode, $profilecode, $id, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $id 
	* @param string $profilecode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getProductHandlingFeeRuleAsync($profilecode, $id, $responseFields =  null)
	{
		$mozuClient = ProductHandlingFeeRulesClient::getProductHandlingFeeRuleClient($this->dataViewMode, $profilecode, $id, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $profilecode 
	* @param string $responseFields 
	* @return HandlingFeeRuleCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getProductHandlingFeeRules($profilecode, $responseFields =  null)
	{
		$mozuClient = ProductHandlingFeeRulesClient::getProductHandlingFeeRulesClient($this->dataViewMode, $profilecode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $profilecode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getProductHandlingFeeRulesAsync($profilecode, $responseFields =  null)
	{
		$mozuClient = ProductHandlingFeeRulesClient::getProductHandlingFeeRulesClient($this->dataViewMode, $profilecode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $profilecode 
	* @param string $responseFields 
	* @param HandlingFeeRule $rule 
	* @return HandlingFeeRule 
	* @deprecated deprecated since version 1.17
	*/
	public function createProductHandlingFeeRule($rule, $profilecode, $responseFields =  null)
	{
		$mozuClient = ProductHandlingFeeRulesClient::createProductHandlingFeeRuleClient($rule, $profilecode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $profilecode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createProductHandlingFeeRuleAsync($rule, $profilecode, $responseFields =  null)
	{
		$mozuClient = ProductHandlingFeeRulesClient::createProductHandlingFeeRuleClient($rule, $profilecode, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $id 
	* @param string $profilecode 
	* @param string $responseFields 
	* @param HandlingFeeRule $rule 
	* @return HandlingFeeRule 
	* @deprecated deprecated since version 1.17
	*/
	public function updateProductHandlingFeeRule($rule, $profilecode, $id, $responseFields =  null)
	{
		$mozuClient = ProductHandlingFeeRulesClient::updateProductHandlingFeeRuleClient($this->dataViewMode, $rule, $profilecode, $id, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $id 
	* @param string $profilecode 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateProductHandlingFeeRuleAsync($rule, $profilecode, $id, $responseFields =  null)
	{
		$mozuClient = ProductHandlingFeeRulesClient::updateProductHandlingFeeRuleClient($this->dataViewMode, $rule, $profilecode, $id, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $id 
	* @param string $profilecode 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteProductHandlingFeeRule($profilecode, $id)
	{
		$mozuClient = ProductHandlingFeeRulesClient::deleteProductHandlingFeeRuleClient($this->dataViewMode, $profilecode, $id);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $id 
	* @param string $profilecode 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteProductHandlingFeeRuleAsync($profilecode, $id)
	{
		$mozuClient = ProductHandlingFeeRulesClient::deleteProductHandlingFeeRuleClient($this->dataViewMode, $profilecode, $id);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

