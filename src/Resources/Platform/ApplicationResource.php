<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Platform;

use Mozu\Api\Clients\Platform\ApplicationClient;
use Mozu\Api\ApiContext;


/**
* 
*/
class ApplicationResource {

				



	/**
	* 
	*
	* @param string $applicationKey 
	* @param string $responseFields 
	* @return PackageNamesCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getAppPackageNames($applicationKey, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getAppPackageNamesClient($applicationKey, $responseFields);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $applicationKey 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getAppPackageNamesAsync($applicationKey, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getAppPackageNamesClient($applicationKey, $responseFields);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $nsAndAppId 
	* @param string $responseFields 
	* @return ApplicationVersionsCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getAppVersions($nsAndAppId, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getAppVersionsClient($nsAndAppId, $responseFields);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $nsAndAppId 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getAppVersionsAsync($nsAndAppId, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getAppVersionsClient($nsAndAppId, $responseFields);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $applicationKey 
	* @param string $filepath 
	* @param string $responseFields 
	* @return FileMetadata 
	* @deprecated deprecated since version 1.17
	*/
	public function getPackageFileMetadata($applicationKey, $filepath, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getPackageFileMetadataClient($applicationKey, $filepath, $responseFields);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $applicationKey 
	* @param string $filepath 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getPackageFileMetadataAsync($applicationKey, $filepath, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getPackageFileMetadataClient($applicationKey, $filepath, $responseFields);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $applicationKey 
	* @param string $responseFields 
	* @return FolderMetadata 
	* @deprecated deprecated since version 1.17
	*/
	public function getPackageMetadata($applicationKey, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getPackageMetadataClient($applicationKey, $responseFields);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $applicationKey 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getPackageMetadataAsync($applicationKey, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::getPackageMetadataClient($applicationKey, $responseFields);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $applicationKey 
	* @param string $filepath 
	* @param string $lastModifiedTime 
	* @param string $responseFields 
	* @return FileMetadata 
	* @deprecated deprecated since version 1.17
	*/
	public function upsertPackageFile($applicationKey, $filepath, $lastModifiedTime =  null, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::upsertPackageFileClient($applicationKey, $filepath, $lastModifiedTime, $responseFields);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $applicationKey 
	* @param string $filepath 
	* @param string $lastModifiedTime 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function upsertPackageFileAsync($applicationKey, $filepath, $lastModifiedTime =  null, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::upsertPackageFileClient($applicationKey, $filepath, $lastModifiedTime, $responseFields);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $applicationKey 
	* @param string $responseFields 
	* @param RenameInfo $renameInfo 
	* @return FileMetadata 
	* @deprecated deprecated since version 1.17
	*/
	public function renamePackageFile($renameInfo, $applicationKey, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::renamePackageFileClient($renameInfo, $applicationKey, $responseFields);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $applicationKey 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function renamePackageFileAsync($renameInfo, $applicationKey, $responseFields =  null)
	{
		$mozuClient = ApplicationClient::renamePackageFileClient($renameInfo, $applicationKey, $responseFields);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $applicationKey 
	* @param string $filepath 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deletePackageFile($applicationKey, $filepath)
	{
		$mozuClient = ApplicationClient::deletePackageFileClient($applicationKey, $filepath);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $applicationKey 
	* @param string $filepath 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deletePackageFileAsync($applicationKey, $filepath)
	{
		$mozuClient = ApplicationClient::deletePackageFileClient($applicationKey, $filepath);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

