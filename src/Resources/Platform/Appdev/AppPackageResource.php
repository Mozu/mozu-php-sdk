<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Platform\Appdev;

use Mozu\Api\Clients\Platform\Appdev\AppPackageClient;
use Mozu\Api\ApiContext;


/**
* 
*/
class AppPackageResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return PackageSummaryCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getAllPackages($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::getAllPackagesClient($startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getAllPackagesAsync($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::getAllPackagesClient($startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $applicationKey 
	* @param bool $includeChildren 
	* @param string $responseFields 
	* @param bool $skipDevAccountCheck 
	* @return Package 
	* @deprecated deprecated since version 1.17
	*/
	public function getPackage($applicationKey, $includeChildren =  null, $skipDevAccountCheck =  null, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::getPackageClient($applicationKey, $includeChildren, $skipDevAccountCheck, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $applicationKey 
	* @param bool $includeChildren 
	* @param string $responseFields 
	* @param bool $skipDevAccountCheck 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getPackageAsync($applicationKey, $includeChildren =  null, $skipDevAccountCheck =  null, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::getPackageClient($applicationKey, $includeChildren, $skipDevAccountCheck, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $applicationKey 
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return PackageCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getPackages($applicationKey, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::getPackagesClient($applicationKey, $startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $applicationKey 
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getPackagesAsync($applicationKey, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::getPackagesClient($applicationKey, $startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $appId 
	* @return array|ApplicationSummary 
	* @deprecated deprecated since version 1.17
	*/
	public function getApplicationSummaryChildren($appId)
	{
		$mozuClient = AppPackageClient::getApplicationSummaryChildrenClient($appId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $appId 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getApplicationSummaryChildrenAsync($appId)
	{
		$mozuClient = AppPackageClient::getApplicationSummaryChildrenClient($appId);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return ApplicationSummaryCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getApplicationSummaryParents($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::getApplicationSummaryParentsClient($startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getApplicationSummaryParentsAsync($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::getApplicationSummaryParentsClient($startIndex, $pageSize, $sortBy, $filter, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $applicationKey 
	* @param string $packageName 
	* @param string $responseFields 
	* @return Package 
	* @deprecated deprecated since version 1.17
	*/
	public function clonePackage($applicationKey, $packageName, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::clonePackageClient($applicationKey, $packageName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $applicationKey 
	* @param string $packageName 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function clonePackageAsync($applicationKey, $packageName, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::clonePackageClient($applicationKey, $packageName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param PackageRequest $packageRequest 
	* @return Package 
	* @deprecated deprecated since version 1.17
	*/
	public function createNewCorePackage($packageRequest, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::createNewCorePackageClient($packageRequest, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createNewCorePackageAsync($packageRequest, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::createNewCorePackageClient($packageRequest, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param int $projectId 
	* @param string $responseFields 
	* @param Package $package 
	* @return Package 
	* @deprecated deprecated since version 1.17
	*/
	public function createPackage($pkg, $projectId =  null, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::createPackageClient($pkg, $projectId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $projectId 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createPackageAsync($pkg, $projectId =  null, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::createPackageClient($pkg, $projectId, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $applicationKey 
	* @param string $responseFields 
	* @param Package $package 
	* @return Package 
	* @deprecated deprecated since version 1.17
	*/
	public function updatePackage($pkg, $applicationKey, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::updatePackageClient($pkg, $applicationKey, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $applicationKey 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updatePackageAsync($pkg, $applicationKey, $responseFields =  null)
	{
		$mozuClient = AppPackageClient::updatePackageClient($pkg, $applicationKey, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $applicationKey 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deletePackage($applicationKey)
	{
		$mozuClient = AppPackageClient::deletePackageClient($applicationKey);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $applicationKey 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deletePackageAsync($applicationKey)
	{
		$mozuClient = AppPackageClient::deletePackageClient($applicationKey);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

