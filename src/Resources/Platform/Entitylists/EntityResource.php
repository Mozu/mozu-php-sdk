<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Platform\Entitylists;

use Mozu\Api\Clients\Platform\Entitylists\EntityClient;
use Mozu\Api\ApiContext;


/**
* 
*/
class EntityResource {

		private $apiContext;
			
	public function __construct(ApiContext $apiContext) 
	{
		$this->apiContext = $apiContext;
	}

	



	/**
	* 
	*
	* @param string $entityListFullName 
	* @param string $id 
	* @param string $responseFields 
	* @return JObject 
	* @deprecated deprecated since version 1.17
	*/
	public function getEntity($entityListFullName, $id, $responseFields =  null)
	{
		$mozuClient = EntityClient::getEntityClient($entityListFullName, $id, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $entityListFullName 
	* @param string $id 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getEntityAsync($entityListFullName, $id, $responseFields =  null)
	{
		$mozuClient = EntityClient::getEntityClient($entityListFullName, $id, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $entityListFullName 
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return EntityCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getEntities($entityListFullName, $pageSize =  null, $startIndex =  null, $filter =  null, $sortBy =  null, $responseFields =  null)
	{
		$mozuClient = EntityClient::getEntitiesClient($entityListFullName, $pageSize, $startIndex, $filter, $sortBy, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $entityListFullName 
	* @param string $filter 
	* @param int $pageSize 
	* @param string $responseFields 
	* @param string $sortBy 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getEntitiesAsync($entityListFullName, $pageSize =  null, $startIndex =  null, $filter =  null, $sortBy =  null, $responseFields =  null)
	{
		$mozuClient = EntityClient::getEntitiesClient($entityListFullName, $pageSize, $startIndex, $filter, $sortBy, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $entityListFullName 
	* @param string $responseFields 
	* @param JObject $item 
	* @return JObject 
	* @deprecated deprecated since version 1.17
	*/
	public function insertEntity($item, $entityListFullName, $responseFields =  null)
	{
		$mozuClient = EntityClient::insertEntityClient($item, $entityListFullName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $entityListFullName 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function insertEntityAsync($item, $entityListFullName, $responseFields =  null)
	{
		$mozuClient = EntityClient::insertEntityClient($item, $entityListFullName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $entityListFullName 
	* @param string $id 
	* @param string $responseFields 
	* @param JObject $item 
	* @return JObject 
	* @deprecated deprecated since version 1.17
	*/
	public function updateEntity($item, $entityListFullName, $id, $responseFields =  null)
	{
		$mozuClient = EntityClient::updateEntityClient($item, $entityListFullName, $id, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $entityListFullName 
	* @param string $id 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updateEntityAsync($item, $entityListFullName, $id, $responseFields =  null)
	{
		$mozuClient = EntityClient::updateEntityClient($item, $entityListFullName, $id, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $entityListFullName 
	* @param string $id 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deleteEntity($entityListFullName, $id)
	{
		$mozuClient = EntityClient::deleteEntityClient($entityListFullName, $id);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $entityListFullName 
	* @param string $id 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deleteEntityAsync($entityListFullName, $id)
	{
		$mozuClient = EntityClient::deleteEntityClient($entityListFullName, $id);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

