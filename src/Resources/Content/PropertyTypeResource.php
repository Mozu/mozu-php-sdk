<?php


/**
* <auto-generated>
*     This code was generated by Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Content;

use Mozu\Api\Clients\Content\PropertyTypeClient;
use Mozu\Api\ApiContext;

use Mozu\Api\Headers;

/**
* Use the property types subresource to manage content properties.
*/
class PropertyTypeResource {

		private $apiContext;
		private $dataViewMode;
		public function __construct(ApiContext $apiContext, $dataViewMode) 
	{
		$this->apiContext = $apiContext;
		$this->dataViewMode = $dataViewMode;
	}
	



	/**
	* 
	*
	* @param int $pageSize 
	* @param string $responseFields 
	* @param int $startIndex 
	* @return PropertyTypeCollection 
	* @deprecated deprecated since version 1.17
	*/
	public function getPropertyTypes($pageSize =  null, $startIndex =  null, $responseFields =  null)
	{
		$mozuClient = PropertyTypeClient::getPropertyTypesClient($this->dataViewMode, $pageSize, $startIndex, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param int $pageSize 
	* @param string $responseFields 
	* @param int $startIndex 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getPropertyTypesAsync($pageSize =  null, $startIndex =  null, $responseFields =  null)
	{
		$mozuClient = PropertyTypeClient::getPropertyTypesClient($this->dataViewMode, $pageSize, $startIndex, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $propertyTypeName The name of the content property type.
	* @param string $responseFields 
	* @return PropertyType 
	* @deprecated deprecated since version 1.17
	*/
	public function getPropertyType($propertyTypeName, $responseFields =  null)
	{
		$mozuClient = PropertyTypeClient::getPropertyTypeClient($this->dataViewMode, $propertyTypeName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $propertyTypeName The name of the content property type.
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function getPropertyTypeAsync($propertyTypeName, $responseFields =  null)
	{
		$mozuClient = PropertyTypeClient::getPropertyTypeClient($this->dataViewMode, $propertyTypeName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $responseFields 
	* @param PropertyType $propertyType 
	* @return PropertyType 
	* @deprecated deprecated since version 1.17
	*/
	public function createPropertyType($propertyType, $responseFields =  null)
	{
		$mozuClient = PropertyTypeClient::createPropertyTypeClient($propertyType, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function createPropertyTypeAsync($propertyType, $responseFields =  null)
	{
		$mozuClient = PropertyTypeClient::createPropertyTypeClient($propertyType, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $propertyTypeName 
	* @param string $responseFields 
	* @param PropertyType $propertyType 
	* @return PropertyType 
	* @deprecated deprecated since version 1.17
	*/
	public function updatePropertyType($propertyType, $propertyTypeName, $responseFields =  null)
	{
		$mozuClient = PropertyTypeClient::updatePropertyTypeClient($this->dataViewMode, $propertyType, $propertyTypeName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $propertyTypeName 
	* @param string $responseFields 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function updatePropertyTypeAsync($propertyType, $propertyTypeName, $responseFields =  null)
	{
		$mozuClient = PropertyTypeClient::updatePropertyTypeClient($this->dataViewMode, $propertyType, $propertyTypeName, $responseFields);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	/**
	* 
	*
	* @param string $propertyTypeName 
	* @return Stream 
	* @deprecated deprecated since version 1.17
	*/
	public function deletePropertyType($propertyTypeName)
	{
		$mozuClient = PropertyTypeClient::deletePropertyTypeClient($this->dataViewMode, $propertyTypeName);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		$mozuClient->execute();
		return $mozuClient->getResult();

	}
	
/**
	* 
	*
	* @param string $propertyTypeName 
	* @return Promise - use $promise->then(sucessfn, errorfn). successFn is passed Mozu\Api\MozuResult. errorFn is passed Mozu\Api\ApiException
	*/
	public function deletePropertyTypeAsync($propertyTypeName)
	{
		$mozuClient = PropertyTypeClient::deletePropertyTypeClient($this->dataViewMode, $propertyTypeName);
		$mozuClient = $mozuClient->withContext($this->apiContext);
		return $mozuClient->executeAsync();

	}
	
	
}

?>

