<?php

/*
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Contracts\CommerceRuntime\Payments;



/**
*	Properties of a resulting payment interaction that occurs when a payment action is performed.
*/
class PaymentInteraction
{
	/**
	*If applicable, the total monetary amount associated with this payment interaction.
	*/
	public $amount;

	/**
	*If applicable, the check number associated with this payment interaction.
	*/
	public $checkNumber;

	/**
	*3-letter ISO 4217 standard global currency code. Currently, only "USD" (US Dollar) is supported.
	*/
	public $currencyCode;

	/**
	*If required by the payment gateway, the authorization code of the transaction.
	*/
	public $gatewayAuthCode;

	/**
	*AVS codes supplied by the payment gateway.
	*/
	public $gatewayAVSCodes;

	/**
	*CVV2 codes supplied by the payment gateway.
	*/
	public $gatewayCVV2Codes;

	/**
	*Unique identifier of the gateway interaction. Used for credit card transactions where the payment creates a GatewayInteractionId for each interaction. System-supplied and read-only.
	*/
	public $gatewayInteractionId;

	/**
	*Response code from the gateway associated with the payment interaction. For example, if the gateway returns "Not Authorized," an interaction for voiding the payment transaction would result.
	*/
	public $gatewayResponseCode;

	/**
	*Textual message returned by the payment gateway.
	*/
	public $gatewayResponseText;

	/**
	*Unique identifier of the gateway transaction associated with the payment interaction.
	*/
	public $gatewayTransactionId;

	/**
	*Unique identifier of the payment interaction.
	*/
	public $id;

	/**
	*Date and time the payment interaction occured.
	*/
	public $interactionDate;

	/**
	*The type of payment interaction, such as Capture or CheckReceived.
	*/
	public $interactionType;

	/**
	*If true, the payment interaction was manually defined s part of offline order processing.
	*/
	public $isManual;

	/**
	*If true, this payment interaction repeats on a scheduled interval.
	*/
	public $isRecurring;

	/**
	*Note content entered for a payment interaction.
	*/
	public $note;

	/**
	*Unique identifier of the order associated with this payment interaction.
	*/
	public $orderId;

	/**
	*The status of the payment prior to the interaction being performed, which enables manual rollback of previous transactions.
	*/
	public $paymentEntryStatus;

	/**
	*Unique identifier of the payment associated with this transaction.
	*/
	public $paymentId;

	/**
	*Unique identifier of previous interaction that this payment interaction is modifying. For example, when refunding a payment, the crediting interaction would reference the capture interaction.
	*/
	public $paymentTransactionInteractionIdReference;

	/**
	*The status of this payment interaction. Possible values are New, Authorized, Captured, Declined, Failed, Voided, Credited, CheckRequested, or RolledBack.
	*/
	public $status;

	/**
	*Identifier and datetime stamp information recorded when a user or application creates, updates, or deletes a resource entity. This value is system-supplied and read-only.
	*/
	public $auditInfo;

}

?>
