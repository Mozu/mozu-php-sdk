<?php


/**
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Resources\Commerce\Catalog\Admin;

use Mozu\Api\Clients\Commerce\Catalog\Admin\ProductClient;
use Mozu\Api\ApiContext;

use Mozu\Api\Contracts\ProductAdmin\ProductInCatalogInfo;
use Mozu\Api\Contracts\ProductAdmin\Product;
use Mozu\Api\Contracts\ProductAdmin\ProductCollection;

/**
* Use the Product Administration resource to create new product definitions in the master catalog and determine which catalogs will feature products. You can also assign attribute values for defined products, manage product-level location inventory, and configure the variations of a product.
*/
class ProductResource {

	private $apiContext;
	private $dataViewMode;
	public function __construct(ApiContext $apiContext, $dataViewMode) 
	{
		$this->apiContext = $apiContext;
		$this->dataViewMode = $dataViewMode;
	}

	

	/**
	* Retrieves a list of products according to any specified facets, filter criteria, and sort options.
	*
	* @param string $filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
	* @param bool $noCount If true, the operation does not return the TotalCount number of results.
	* @param int $pageSize The number of results to display on each page when creating paged results from a query. The maximum value is 200.
	* @param string $q A list of product search terms to use in the query when searching across product code and product name. Separate multiple search terms with a space character.
	* @param int $qLimit The maximum number of search results to return in the response. You can limit any range between 1-100.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param string $sortBy 
	* @param int $startIndex 
	* @return ProductCollection 
	*/
	public function getProducts($startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $q =  null, $qLimit =  null, $noCount =  null, $responseFields =  null)
	{
		$mozuClient = ProductClient::getProductsClient($this->dataViewMode, $startIndex, $pageSize, $sortBy, $filter, $q, $qLimit, $noCount, $responseFields);
		return $mozuClient->withContext($this->apiContext)
				->execute()
				->getResult();

	}
	
	/**
	* Retrieves a product that is associated with one or more specific catalogs.
	*
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return array|ProductInCatalogInfo 
	*/
	public function getProductInCatalogs($productCode)
	{
		$mozuClient = ProductClient::getProductInCatalogsClient($this->dataViewMode, $productCode);
		return $mozuClient->withContext($this->apiContext)
				->execute()
				->getResult();

	}
	
	/**
	* Retrieves the details of a product associated with a specific catalog.
	*
	* @param int $catalogId The unique identifier of the catalog of products used by a site.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @return ProductInCatalogInfo 
	*/
	public function getProductInCatalog($productCode, $catalogId, $responseFields =  null)
	{
		$mozuClient = ProductClient::getProductInCatalogClient($this->dataViewMode, $productCode, $catalogId, $responseFields);
		return $mozuClient->withContext($this->apiContext)
				->execute()
				->getResult();

	}
	
	/**
	* Retrieves the details of a product definition.
	*
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @return Product 
	*/
	public function getProduct($productCode, $responseFields =  null)
	{
		$mozuClient = ProductClient::getProductClient($this->dataViewMode, $productCode, $responseFields);
		return $mozuClient->withContext($this->apiContext)
				->execute()
				->getResult();

	}
	
	/**
	* Creates a new product definition in the specified master catalog.
	*
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param Product $product Properties of the new product. You must supply values for the product code, product name, and price.
	* @return Product 
	*/
	public function addProduct($product, $responseFields =  null)
	{
		$mozuClient = ProductClient::addProductClient($this->dataViewMode, $product, $responseFields);
		return $mozuClient->withContext($this->apiContext)
				->execute()
				->getResult();

	}
	
	/**
	* Associates a new product defined in the master catalog with a specific catalog.
	*
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param ProductInCatalogInfo $productInCatalogInfoIn Properties of the product to define for the specific catalog association.
	* @return ProductInCatalogInfo 
	*/
	public function addProductInCatalog($productInCatalogInfoIn, $productCode, $responseFields =  null)
	{
		$mozuClient = ProductClient::addProductInCatalogClient($this->dataViewMode, $productInCatalogInfoIn, $productCode, $responseFields);
		return $mozuClient->withContext($this->apiContext)
				->execute()
				->getResult();

	}
	
	/**
	* Updates the properties of a product specific to each catalog associated with the product.
	*
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param array|ProductInCatalogInfo $productInCatalogsIn Properties of the product to update for each associated catalog.
	* @return array|ProductInCatalogInfo 
	*/
	public function updateProductInCatalogs($productInCatalogsIn, $productCode)
	{
		$mozuClient = ProductClient::updateProductInCatalogsClient($this->dataViewMode, $productInCatalogsIn, $productCode);
		return $mozuClient->withContext($this->apiContext)
				->execute()
				->getResult();

	}
	
	/**
	* Updates one or more properties of a product associated with a specific catalog.
	*
	* @param int $catalogId The unique identifier of the catalog of products used by a site.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param ProductInCatalogInfo $productInCatalogInfoIn Properties of the product associated with the catalog specified in the request.
	* @return ProductInCatalogInfo 
	*/
	public function updateProductInCatalog($productInCatalogInfoIn, $productCode, $catalogId, $responseFields =  null)
	{
		$mozuClient = ProductClient::updateProductInCatalogClient($this->dataViewMode, $productInCatalogInfoIn, $productCode, $catalogId, $responseFields);
		return $mozuClient->withContext($this->apiContext)
				->execute()
				->getResult();

	}
	
	/**
	* Updates one or more properties of a product definition in a master catalog.
	*
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param Product $product Properties of the product definition to update in the master catalog.
	* @return Product 
	*/
	public function updateProduct($product, $productCode, $responseFields =  null)
	{
		$mozuClient = ProductClient::updateProductClient($this->dataViewMode, $product, $productCode, $responseFields);
		return $mozuClient->withContext($this->apiContext)
				->execute()
				->getResult();

	}
	
	/**
	* Deletes the specified product from a master catalog.
	*
	* @param string $productCode 
	* @return void
	*/
	public function deleteProduct($productCode)
	{
		$mozuClient = ProductClient::deleteProductClient($this->dataViewMode, $productCode);
		$mozuClient->withContext($this->apiContext)
				->execute();

	}
	
	/**
	* Removes the product association defined for a specific catalog.
	*
	* @param int $catalogId The unique identifier of the catalog of products used by a site.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @return void
	*/
	public function deleteProductInCatalog($productCode, $catalogId)
	{
		$mozuClient = ProductClient::deleteProductInCatalogClient($this->dataViewMode, $productCode, $catalogId);
		$mozuClient->withContext($this->apiContext)
				->execute();

	}
	
	
}

?>

