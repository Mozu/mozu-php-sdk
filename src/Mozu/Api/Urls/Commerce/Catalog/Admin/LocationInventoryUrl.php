<?php

/*
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/


namespace Mozu\Api\Urls\Commerce\Catalog\Admin;

use Mozu\Api\MozuUrl;
use Mozu\Api\UrlLocation;

class LocationInventoryUrl  {

	/**
		* Get Resource Url for GetLocationInventory
		* @param string $locationCode User-defined code that uniquely identifies the location.
		* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
		* @param string $responseFields Use this field to include those fields which are not included by default.
		* @return string Resource Url
	*/
	public static function getLocationInventoryUrl($locationCode, $productCode, $responseFields)
	{
		$url = "/api/commerce/catalog/admin/locationinventory/{locationCode}/{productCode}?responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false);
		$mozuUrl->formatUrl("locationCode", $locationCode)
				->formatUrl("productCode", $productCode)
				->formatUrl("responseFields", $responseFields);

		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for GetLocationInventories
		* @param string $filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
		* @param string $locationCode User-defined code that uniquely identifies the location.
		* @param int $pageSize The number of results to display on each page when creating paged results from a query. The maximum value is 200.
		* @param string $responseFields Use this field to include those fields which are not included by default.
		* @param string $sortBy The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"
		* @param int $startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
		* @return string Resource Url
	*/
	public static function getLocationInventoriesUrl($filter, $locationCode, $pageSize, $responseFields, $sortBy, $startIndex)
	{
		$url = "/api/commerce/catalog/admin/locationinventory/{locationCode}?startIndex={startIndex}&pageSize={pageSize}&sortBy={sortBy}&filter={filter}&responseFields={responseFields}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"GET", false);
		$mozuUrl->formatUrl("filter", $filter)
				->formatUrl("locationCode", $locationCode)
				->formatUrl("pageSize", $pageSize)
				->formatUrl("responseFields", $responseFields)
				->formatUrl("sortBy", $sortBy)
				->formatUrl("startIndex", $startIndex);

		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for AddLocationInventory
		* @param string $locationCode User-defined code that uniquely identifies the location.
		* @param bool $performUpserts 
		* @return string Resource Url
	*/
	public static function addLocationInventoryUrl($locationCode, $performUpserts)
	{
		$url = "/api/commerce/catalog/admin/locationinventory/{locationCode}?performUpserts={performUpserts}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"POST", false);
		$mozuUrl->formatUrl("locationCode", $locationCode)
				->formatUrl("performUpserts", $performUpserts);

		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for UpdateLocationInventory
		* @param string $locationCode User-defined code that uniquely identifies the location.
		* @return string Resource Url
	*/
	public static function updateLocationInventoryUrl($locationCode)
	{
		$url = "/api/commerce/catalog/admin/locationinventory/{locationCode}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"PUT", false);
		$mozuUrl->formatUrl("locationCode", $locationCode);

		return $mozuUrl;
	}
	
	/**
		* Get Resource Url for DeleteLocationInventory
		* @param string $locationCode User-defined code that uniquely identifies the location.
		* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
		* @return string Resource Url
	*/
	public static function deleteLocationInventoryUrl($locationCode, $productCode)
	{
		$url = "/api/commerce/catalog/admin/locationinventory/{locationCode}/{productCode}";
		$mozuUrl = new MozuUrl($url, UrlLocation::TENANT_POD,"DELETE", false);
		$mozuUrl->formatUrl("locationCode", $locationCode)
				->formatUrl("productCode", $productCode);

		return $mozuUrl;
	}
	
}

?>

