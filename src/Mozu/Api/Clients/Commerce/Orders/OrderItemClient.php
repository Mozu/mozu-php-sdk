<?php


/**
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Orders;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Orders\OrderItemUrl;
use Mozu\Api\Headers;

use Mozu\Api\Contracts\CommerceRuntime\Orders\OrderItem;
use Mozu\Api\Contracts\CommerceRuntime\Discounts\AppliedDiscount;
use Mozu\Api\Contracts\CommerceRuntime\Orders\Order;
use Mozu\Api\Contracts\CommerceRuntime\Orders\OrderItemCollection;

/**
* Use this subresource to retrieve details about items in an active order.
*/
class OrderItemClient {

	/**
	* Retrieves the details of a single order item.
	*
	* @param bool $draft If true, retrieve the draft version of this order item, which might include uncommitted changes to the order item, the order, or other order components.
	* @param string $orderId Unique identifier of the order item to retrieve.
	* @param string $orderItemId Unique identifier of the order item details to retrieve.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @return MozuClient
	*/
	public static function getOrderItemClient($orderId, $orderItemId, $draft =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::getOrderItemUrl($draft, $orderId, $orderItemId, $responseFields);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url);

	}
	
	/**
	* Retrieves the details of all items in an order.
	*
	* @param bool $draft If true, retrieve the draft version of the order's items, which might include uncommitted changes to one or more order items, the order itself, or other order components.
	* @param string $orderId Unique identifier of the order items to retrieve.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @return MozuClient
	*/
	public static function getOrderItemsClient($orderId, $draft =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::getOrderItemsUrl($draft, $orderId, $responseFields);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url);

	}
	
	/**
	* Adds a new item to a defined order.
	*
	* @param string $orderId Unique identifier of the order for which to add the item.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param bool $skipInventoryCheck If true, do not validate the product inventory when adding this item to the order.
	* @param string $updateMode Specifies whether to add the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.
	* @param OrderItem $orderItem The properties of the item to create in the existing order.
	* @return MozuClient
	*/
	public static function createOrderItemClient($orderItem, $orderId, $updateMode =  null, $version =  null, $skipInventoryCheck =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::createOrderItemUrl($orderId, $responseFields, $skipInventoryCheck, $updateMode, $version);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withBody($orderItem);

	}
	
	/**
	* Update the discount applied to an item in an order.
	*
	* @param int $discountId Unique identifier of the discount. System-supplied and read only.
	* @param string $orderId Unique identifier of the order associated with the item discount.
	* @param string $orderItemId Unique identifier of the item in the order.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param string $updateMode Specifies whether to change the item discount by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.
	* @param AppliedDiscount $discount Properties of the discount to modify for the order item.
	* @return MozuClient
	*/
	public static function updateOrderItemDiscountClient($discount, $orderId, $orderItemId, $discountId, $updateMode =  null, $version =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::updateOrderItemDiscountUrl($discountId, $orderId, $orderItemId, $responseFields, $updateMode, $version);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withBody($discount);

	}
	
	/**
	* Updates the item fulfillment information for the order specified in the request.
	*
	* @param string $orderId Unique identifier of the order.
	* @param string $orderItemId Unique identifier of the item in the order.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param string $updateMode Specifies whether to apply the coupon by updating the original order, updating the order in draft mode, or updating the order in draft mode and then commit the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.
	* @param OrderItem $orderItem Properties of the order item to update for fulfillment.
	* @return MozuClient
	*/
	public static function updateItemFulfillmentClient($orderItem, $orderId, $orderItemId, $updateMode =  null, $version =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::updateItemFulfillmentUrl($orderId, $orderItemId, $responseFields, $updateMode, $version);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withBody($orderItem);

	}
	
	/**
	* Override the price of an individual product on a line item in the specified order.
	*
	* @param string $orderId Unique identifier of the order containing the item to price override.
	* @param string $orderItemId Unique identifier of the item in the order to price override.
	* @param float $price The override price to specify for this item in the specified order.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param string $updateMode Specifies whether to change the product price by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.
	* @return MozuClient
	*/
	public static function updateItemProductPriceClient($orderId, $orderItemId, $price, $updateMode =  null, $version =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::updateItemProductPriceUrl($orderId, $orderItemId, $price, $responseFields, $updateMode, $version);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url);

	}
	
	/**
	* Update the quantity of an item in an order.
	*
	* @param string $orderId Unique identifier of the order containing the item to update quantity.
	* @param string $orderItemId Unique identifier of the item in the order to update quantity.
	* @param int $quantity The quantity of the item in the order to update.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param string $updateMode Specifies whether to change the item quantity by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.
	* @return MozuClient
	*/
	public static function updateItemQuantityClient($orderId, $orderItemId, $quantity, $updateMode =  null, $version =  null, $responseFields =  null)
	{
		$url = OrderItemUrl::updateItemQuantityUrl($orderId, $orderItemId, $quantity, $responseFields, $updateMode, $version);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url);

	}
	
	/**
	* Removes a previously added item from a defined order.
	*
	* @param string $orderId Unique identifier of the order with the item to remove.
	* @param string $orderItemId Unique identifier of the item to remove from the order.
	* @param string $updateMode Specifies whether to remove the item by updating the original order, updating the order in draft mode, or updating the order in draft mode and then committing the changes to the original. Draft mode enables users to make incremental order changes before committing the changes to the original order. Valid values are "ApplyToOriginal," "ApplyToDraft," or "ApplyAndCommit."
	* @param string $version System-supplied integer that represents the current version of the order, which prevents users from unintentionally overriding changes to the order. When a user performs an operation for a defined order, the system validates that the version of the updated order matches the version of the order on the server. After the operation completes successfully, the system increments the version number by one.
	* @return MozuClient
	*/
	public static function deleteOrderItemClient($orderId, $orderItemId, $updateMode =  null, $version =  null)
	{
		$url = OrderItemUrl::deleteOrderItemUrl($orderId, $orderItemId, $updateMode, $version);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url);

	}
	
	
}

?>

