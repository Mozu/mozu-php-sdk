<?php


/**
* <auto-generated>
*     This code was generated by a Codezu.     
*
*     Changes to this file may cause incorrect behavior and will be lost if
*     the code is regenerated.
* </auto-generated>
*/

namespace Mozu\Api\Clients\Commerce\Catalog\Admin\Products;

use Mozu\Api\MozuClient;
use Mozu\Api\Urls\Commerce\Catalog\Admin\Products\ProductVariationUrl;
use Mozu\Api\Headers;
use Mozu\Api\DataViewMode;

use Mozu\Api\Contracts\ProductAdmin\ProductVariationDeltaPrice;
use Mozu\Api\Contracts\ProductAdmin\ProductVariationCollection;
use Mozu\Api\Contracts\ProductAdmin\ProductVariation;
use Mozu\Api\Contracts\ProductAdmin\ProductVariationPagedCollection;

/**
* Use the product variations sub-resource to manage the variations of a product based on its attributes. For example, a t-shirt product could be offered in six variations: Small Black, Medium Black, Large Black, Small White, Medium White, and Large White.
*/
class ProductVariationClient {

	/**
	* 
	*
	* @param DataViewMode $dataViewMode
	* @param string $productCode 
	* @param string $variationKey 
	* @return MozuClient
	*/
	public static function getProductVariationLocalizedDeltaPricesClient($dataViewMode, $productCode, $variationKey)
	{
		$url = ProductVariationUrl::getProductVariationLocalizedDeltaPricesUrl($productCode, $variationKey);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);

	}
	
	/**
	* 
	*
	* @param DataViewMode $dataViewMode
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param string $variationKey 
	* @return MozuClient
	*/
	public static function getProductVariationLocalizedDeltaPriceClient($dataViewMode, $productCode, $variationKey, $currencyCode, $responseFields =  null)
	{
		$url = ProductVariationUrl::getProductVariationLocalizedDeltaPriceUrl($currencyCode, $productCode, $responseFields, $variationKey);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);

	}
	
	/**
	* Retrieves the details of a product variation based on the supplied product code and variation key.
	*
	* @param DataViewMode $dataViewMode
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param string $variationKey System-generated key that represents the attribute values that uniquely identify a specific product variation.
	* @return MozuClient
	*/
	public static function getProductVariationClient($dataViewMode, $productCode, $variationKey, $responseFields =  null)
	{
		$url = ProductVariationUrl::getProductVariationUrl($productCode, $responseFields, $variationKey);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);

	}
	
	/**
	* Retrieves a list of the product variations configured for the specified product code.
	*
	* @param DataViewMode $dataViewMode
	* @param string $filter A set of expressions that consist of a field, operator, and value and represent search parameter syntax when filtering results of a query. Valid operators include equals (eq), does not equal (ne), greater than (gt), less than (lt), greater than or equal to (ge), less than or equal to (le), starts with (sw), or contains (cont). For example - "filter=IsDisplayed+eq+true"
	* @param int $pageSize The number of results to display on each page when creating paged results from a query. The maximum value is 200.
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param string $sortBy The property by which to sort results and whether the results appear in ascending (a-z) order, represented by ASC or in descending (z-a) order, represented by DESC. The sortBy parameter follows an available property. For example: "sortBy=productCode+asc"
	* @param int $startIndex When creating paged results from a query, this value indicates the zero-based offset in the complete result set where the returned entities begin. For example, with a PageSize of 25, to get the 51st through the 75th items, use startIndex=3.
	* @return MozuClient
	*/
	public static function getProductVariationsClient($dataViewMode, $productCode, $startIndex =  null, $pageSize =  null, $sortBy =  null, $filter =  null, $responseFields =  null)
	{
		$url = ProductVariationUrl::getProductVariationsUrl($filter, $pageSize, $productCode, $responseFields, $sortBy, $startIndex);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);

	}
	
	/**
	* 
	*
	* @param DataViewMode $dataViewMode
	* @param string $productCode 
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param string $variationKey 
	* @param ProductVariationDeltaPrice $localizedDeltaPrice 
	* @return MozuClient
	*/
	public static function addProductVariationLocalizedDeltaPriceClient($dataViewMode, $localizedDeltaPrice, $productCode, $variationKey, $responseFields =  null)
	{
		$url = ProductVariationUrl::addProductVariationLocalizedDeltaPriceUrl($productCode, $responseFields, $variationKey);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withBody($localizedDeltaPrice)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);

	}
	
	/**
	* 
	*
	* @param DataViewMode $dataViewMode
	* @param string $productCode 
	* @param string $variationKey 
	* @param array|ProductVariationDeltaPrice $localizedDeltaPrice 
	* @return MozuClient
	*/
	public static function updateProductVariationLocalizedDeltaPricesClient($dataViewMode, $localizedDeltaPrice, $productCode, $variationKey)
	{
		$url = ProductVariationUrl::updateProductVariationLocalizedDeltaPricesUrl($productCode, $variationKey);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withBody($localizedDeltaPrice)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);

	}
	
	/**
	* 
	*
	* @param DataViewMode $dataViewMode
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param string $variationKey 
	* @param ProductVariationDeltaPrice $localizedDeltaPrice 
	* @return MozuClient
	*/
	public static function updateProductVariationLocalizedDeltaPriceClient($dataViewMode, $localizedDeltaPrice, $productCode, $variationKey, $currencyCode, $responseFields =  null)
	{
		$url = ProductVariationUrl::updateProductVariationLocalizedDeltaPriceUrl($currencyCode, $productCode, $responseFields, $variationKey);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withBody($localizedDeltaPrice)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);

	}
	
	/**
	* Modifies the details of a variation, based on the supplied variation key, for the specified product code.
	*
	* @param DataViewMode $dataViewMode
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param string $responseFields Use this field to include those fields which are not included by default.
	* @param string $variationKey System-generated key that represents the attribute values that uniquely identify a specific product variation.
	* @param ProductVariation $productVariation Wrapper for the properties of the specified product variation.
	* @return MozuClient
	*/
	public static function updateProductVariationClient($dataViewMode, $productVariation, $productCode, $variationKey, $responseFields =  null)
	{
		$url = ProductVariationUrl::updateProductVariationUrl($productCode, $responseFields, $variationKey);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withBody($productVariation)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);

	}
	
	/**
	* Modifies the collection of variations for the specified product code. Because this PUT replaces the existing resource, supply all information necessary to maintain for the product variation.
	*
	* @param DataViewMode $dataViewMode
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param string $responseFields 
	* @param ProductVariationCollection $productVariations Wrapper for the collection of variations configured for the specified product code.
	* @return MozuClient
	*/
	public static function updateProductVariationsClient($dataViewMode, $productVariations, $productCode, $responseFields =  null)
	{
		$url = ProductVariationUrl::updateProductVariationsUrl($productCode, $responseFields);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withBody($productVariations)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);

	}
	
	/**
	* Deletes a variation, based on the supplied variation key, for the specified product code.
	*
	* @param DataViewMode $dataViewMode
	* @param string $productCode Merchant-created code that uniquely identifies the product such as a SKU or item number. Once created, the product code is read-only.
	* @param string $variationKey System-generated key that represents the attribute values that uniquely identify a specific product variation.
	* @return MozuClient
	*/
	public static function deleteProductVariationClient($dataViewMode, $productCode, $variationKey)
	{
		$url = ProductVariationUrl::deleteProductVariationUrl($productCode, $variationKey);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);

	}
	
	/**
	* 
	*
	* @param DataViewMode $dataViewMode
	* @param string $currencyCode 
	* @param string $productCode 
	* @param string $variationKey 
	* @return MozuClient
	*/
	public static function deleteProductVariationLocalizedDeltaPriceClient($dataViewMode, $productCode, $variationKey, $currencyCode)
	{
		$url = ProductVariationUrl::deleteProductVariationLocalizedDeltaPriceUrl($currencyCode, $productCode, $variationKey);
		$mozuClient = new MozuClient();
		return $mozuClient->withResourceUrl($url)->withHeader(Headers::X_VOL_DATAVIEW_MODE ,$dataViewMode);

	}
	
	
}

?>

